package com.kesd.action;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONObject;

import org.apache.struts2.json.annotations.JSON;

import com.kesd.common.CommFunc;
import com.kesd.common.Dict;
import com.kesd.common.SDDef;
import com.kesd.common.WebConfig;
import com.kesd.common.YDTable;
import com.kesd.dbpara.YffAlarmPara;
import com.kesd.dbpara.YffRatePara;
import com.kesd.util.I18N;
import com.kesd.util.MoneyNum2Char;
import com.kesd.util.Rd;
import com.libweb.common.CommBase;
import com.libweb.dao.JDBCDao;
import com.opensymphony.xwork2.ActionSupport;

public class ActPrint extends ActionSupport{
	
	private static final long serialVersionUID = -5361955728106872688L;
	
	private String   	result;
	private String   	field;
	private String     	bytesize;
	private String     	errMsg;
	
	private static String		sept = "|"; 	
	public static class nodeIdx {
		public	static final byte	dycard		= 1;
		public	static final byte	dyaddcus	= 2;
		public	static final byte	tool	= 3;
		/*public	static final byte	dyremote	= 3;
		public	static final byte	dymain 		= 4;	
		public	static final byte	gycard1     = 5;
		public	static final byte	gycard3     = 6;
		public	static final byte	gyycmoney   = 7;
		public	static final byte	gyycbd      = 8;
		public	static final byte	gymain      = 9;
		public	static final byte	npcard		= 10;
		//private	static final byte	dycardmoney	= 10;
		public	static final byte	dycarddl	= 11;*/
	}
	    
	class WebPrintData//web打印参数	
	{
		//公共档案
		public	String		org_desc = "";			//供电所
		public  String		line_desc = "";         //变电站线路
		public  String		org_addr = "";          //购电地址
		public  String		org_telno = "";         //服务电话
		public  String		yffman_desc = "";       //售电操作员
		public  String		busi_no = "";           //客户编号
		public  String		cons_desc = "";         //客户名称
		public  String		trade1_desc = "";       //客户分类
		public  String		cus_state_desc = "";    //客户状态
		public  String		cont_cap = "";          //变压器容量(kVA)
		public  String		rtu_desc = "";			//终端描述
		public  String		tel_no1 = "";           //客户固定电话
		public  String		tel_no2 = "";           //客户移动电话
		public  String		meter_id = "";          //ESAM表号
		public  String	    comm_addr = "";         //电表地址
		public  String		writecard_no = "";		//写卡户号
		public  String		beilv = "";				//倍率
		public  String		fee_type_desc = "";     //电价类型
		public  String		yffrate_desc = "";      //电价方案
		public  String		yffalarm_desc = "";     //报警方案
		public  String		cs_stand_desc = "";     //力调方案
		public  String		cacl_type_desc = "";    //计费方式
		public  String		feectrl_type_desc = ""; //费控方式
		public  String		pay_type_desc = "";     //缴费方式
		public  String		jt_cycle_md = "";       //阶梯周期切换日期
		public  String		area_desc = "";		    //所属片区
		public  String		np_cardno = "";		    //农排卡号
		public  String		reprint_desc = "";      //补打标志

		public  String		para_back1 = "";	    //备用参数28
		public  String		para_back2 = "";	    //备用参数29
		public  String		para_back3 = "";	    //备用参数30

		//缴费参数
		public  String		paytime = "";			//缴费日期
		public  String		wasteno = "";			//流水号
		public  String		rewasteno = "";			//被冲正流水号
		public  String		op_type_desc = "";		//操作类型
		public  Integer		buy_times = 0;			//购电次数
		public  String		bef_jsygbd = "";		//结算有功表底
		public  String		bef_jswgbd = "";		//结算无功表底
		public  String		bef_ygbd = "";			//缴费前有功表底
		public  String		bef_wgbd = "";			//缴费前无功表底
		public  Double 		bef_remain = 0.0;		//缴费前剩余金额
		public  Double 		bef_shutdown_val = 0.0;	//缴费前断电止码
		public  Double 		pay_money = 0.0;		//缴费金额(元)
		public  String		pay_money_desc = "";	//缴费金额大写字符串
		public  Double 		othjs_money = 0.0;		//结算金额(元)
		public  Double 		zb_money = 0.0;			//追补金额(元)
		public  Double 		all_money = 0.0;		//缴费总金额(元)
		public  String		all_money_desc = "";	//缴费总金额大写字符串
		public  Double 		alarm_code = 0.0;		//报警表底
		public  Double 		buy_dl = 0.0;			//购电量
		public  Double 		pay_bmc = 0.0;			//表码差
		public  Double 		shutdown_val = 0.0;		//断电止码
		public  Double 		alarm_money1 = 0.0;		//报警金额1(元)
		public  Double 		alarm_money2 = 0.0;		//报警金额2(元)
		public  Double 		aft_money = 0.0;		//缴费后剩余金额(元)
		public  Double 		aft_money2 = 0.0;		//缴费后剩余金额2(元)
		public  Double 		total_pay_money = 0.0;	//累计缴费金额(元)
		public  Double 		jt_use_dl1 = 0.0;		//阶梯一档用电量
		public  Double 		jt_use_dl2 = 0.0;		//阶梯二档用电量
		public  Double 		jt_use_dl3 = 0.0;		//阶梯三档用电量
		public  Double 		jt_use_dl4 = 0.0;		//阶梯四档用电量
		public  String		pay_back1 = "";			//缴费备用61
		public  String		pay_back2 = "";			//缴费备用62
		public  String		pay_back3 = "";			//缴费备用63
		public  String		pay_back4 = "";			//缴费备用64
		public  String		pay_back5 = "";			//缴费备用65
		public  String		pay_back6 = "";			//缴费备用66
		public  String		pay_back7 = "";			//缴费备用67
		public  String		pay_back8 = "";			//缴费备用68
		public  String		pay_back9 = "";			//缴费备用69
		public  String		pay_back10 = "";		//缴费备用70

		//发行电费
		public  String	    fx_mdhmi = "";			//发行电费日期
		public  Double 	    fx_ele_money = 0.0;		//发行电度电费(元)
		public  Double 	    fx_jbf_money = 0.0;		//发行基本电费(元)
		public  Double 	    fx_powrate_money = 0.0;	//发行力调电费(元)
		public  Double 	    fx_other_money = 0.0;	//发行其他电费(元)
		public  Double 	    fx_all_money = 0.0;		//发行总电费(元)
		public  Double 	    fx_ygbd = 0.0;			//发行有功表底
		public  Double 	    fx_wgbd = 0.0;			//发行无功表底
		public  Double 	    fx_ygdl = 0.0;			//发行有功电量
		public  Double 	    fx_wgdl = 0.0;			//发行无功电量
		public  Double 	    fx_jtygbd = 0.0;		//阶梯发行有功表底
		public  Double 	    fx_jtygdl = 0.0;		//阶梯累计用电量
		public  String		fx_back1 = "";			//电费备用83
		public  String		fx_back2 = "";			//电费备用84
		public  String		fx_back3 = "";			//电费备用85
		public  String		fx_back4 = "";			//电费备用86
		public  String		fx_back5 = "";			//电费备用87
		public  String		fx_back6 = "";			//电费备用88
		public  String		fx_back7 = "";			//电费备用89
		public  String		fx_back8 = "";			//电费备用90

	} 
	
	/**打印 -- 生成webPrint的参数*/
	@JSON(serialize=false)
	public String getPrintPara(){
		
		if(result == null || result.isEmpty()){
			result = SDDef.EMPTY;
			return SDDef.SUCCESS;
		}
		
		JSONObject json = JSONObject.fromObject(result);
		String fileName = json.getString("file_name");
		byte pageType = (byte)CommBase.strtoi(json.getString("page_type"));//传入的值为nodeIdx[i],表示是哪个应用类型的页面调用打印。
		
		if(fileName.equals("")){
			result = SDDef.EMPTY;
			errMsg = "没有指定模板文件，文件名为空。";
			return SDDef.SUCCESS;
		}
		
		StringBuffer templateStr 	= new StringBuffer(); 
		StringBuffer printDataStr 	= new StringBuffer();
		
		if(!getTemplateString(fileName,templateStr)){
			result = SDDef.EMPTY;
			errMsg = "读取模板文件失败:" + errMsg;
			return SDDef.SUCCESS;
		}
		boolean successflag = false;
		
		switch(pageType){
//		case nodeIdx.dymain: 	//低压主站费控--实际上在补打发票时是按照 缴费方式。
//			successflag = getReprintDataDyMaster(result, printDataStr);
//			break;
		case nodeIdx.dycard: 	//低压终端费控-卡式
 		case nodeIdx.dyaddcus:	
 			successflag = getReprintDataDyRemote(result, printDataStr);
			break; 
		case nodeIdx.tool:	
 			successflag = getReprintDataDyTool(result, printDataStr);
			break; 
//		case nodeIdx.gymain : //高压主站费控
//			successflag = getReprintDataGyMaster(result, printDataStr);
//			break;
//		case nodeIdx.gyycbd : //高压终端费控远程按表底
//			successflag = getReprintDataGyRemoteBD(result, printDataStr);
//			break;
//		case nodeIdx.gycard3 ://高压终端费控卡式按表底6103
//			successflag = getReprintDataGy6103(result, printDataStr);
//			break;
//		case nodeIdx.gyycmoney ://高压终端费控远程按金额
//		case nodeIdx.gycard1 ://高压终端费控卡式按金额
//			successflag = getReprintDataGyRemoteJE(result, printDataStr);
//			break;
//		case nodeIdx.npcard :
//			successflag = getReprintDataNpCard(result, printDataStr);
//			break;
//		case nodeIdx.dycarddl:
//			successflag = getReprintDataDycarddl(result, printDataStr);
//			break;
			
		default  :
			result = SDDef.EMPTY;
			errMsg = "未知的页面类型:" + pageType;
			return SDDef.SUCCESS;
		}
		
		if(!successflag){
			result = SDDef.EMPTY;
			errMsg = "读取打印数据失败:" + errMsg;
			return SDDef.SUCCESS;
		}
	
		
		result = templateStr.toString() + sept + printDataStr.toString();
		
		return SDDef.SUCCESS;
	}
	
	
	private boolean getReprintDataDyTool(String yffDataOperIdx, StringBuffer printDataStr){

		WebPrintData 	wpdata = new WebPrintData(); 
		JDBCDao 		j_dao  = new JDBCDao();
		
		JSONObject json  = JSONObject.fromObject(yffDataOperIdx);
		Integer rtu_id   = json.getInt("rtu_id");
		Short  	sub_id   = (short)json.getInt("sub_id");
		String  op_date  = json.getString("op_date");	//操作日期
		String  op_time  = json.getString("op_time");	//购电时间
		while(op_time.length() < 6) op_time = "0" + op_time;
		String[]  tokens = json.getString("wasteno").split(",");

		//从数据库查询
		String sql = "select r.id as rtu_id,r.describe as rtu_desc,res.cons_no,res.describe cons_desc,res.phone as tel_no1,res.mobile as tel_no2,o.describe org_desc,o.addr org_addr,o.telno org_telno,mt.meter_id,mt.comm_addr,a.pt_ratio*a.ct_ratio as beilv," +
					 "c.cus_state,b.cacl_type,b.feectrl_type,b.pay_type,b.jt_cycle_md,b.cb_dayhour,b.fee_begindate,b.power_relaf,b.power_rela1,power_rela2,b.feeproj_id,b.yffalarm_id,c.kh_date,c.jt_total_dl,c.total_gdz,c.buy_times,c.buy_dl,d.ratej_td1,d.ratej_td2,ratej_td3 " +
					 "from conspara con,orgpara o,rtupara r,residentpara res,meterpara mt,mppara a,mppay_para b,mppay_state c,yffratepara d " +
					 "where con.app_type=3 and a.rtu_id=b.rtu_id and a.rtu_id=c.rtu_id and a.id=b.mp_id and a.id=c.mp_id " +
					 "and r.id=a.rtu_id and r.cons_id=con.id and con.org_id=o.id and res.rtu_id=r.id and mt.resident_id=res.id and mt.rtu_id=r.id and mt.mp_id=a.id and b.feeproj_id=d.id and " +
					 "a.rtu_id=" + rtu_id + " and a.id=" + sub_id;
		
		
		try {		
			List<Map<String,Object>> listp = j_dao.result(sql);
		
			if(listp == null || listp.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的用户档案.";
				return false;
			}
		
			//获取一条数据存入map
			Map<String,Object> mapp = listp.get(0);
		
	
			//给wpdata赋值
			wpdata.org_desc			= CommBase.CheckString(mapp.get("org_desc")); 	//供电所
			wpdata.org_addr			= CommBase.CheckString(mapp.get("org_addr")); //购电地址
			wpdata.org_telno		= CommBase.CheckString(mapp.get("org_telno"));//服务电话
//			wpdata.yffman_desc		= CommBase.CheckString(mapd.get("op_man"));//售电操作员
			wpdata.busi_no			= CommBase.CheckString(mapp.get("cons_no"));//客户编号
			wpdata.cons_desc		= CommBase.CheckString(mapp.get("cons_desc"));//客户名称
			wpdata.cus_state_desc 	= Rd.getDict(Dict.DICTITEM_YFFCUSSTATE, mapp.get("cus_state"));//客户状态
			wpdata.rtu_desc			= CommBase.CheckString(mapp.get("rtu_desc"));//集中器描述
			wpdata.tel_no1			= CommBase.CheckString(mapp.get("tel_no1"));//客户固定电话
			wpdata.tel_no2			= CommBase.CheckString(mapp.get("tel_no2"));//客户移动电话
			wpdata.meter_id 		= CommBase.CheckString(mapp.get("meter_id"));//ESAM表号
			wpdata.comm_addr		= CommBase.CheckString(mapp.get("comm_addr"));//电表地址		 
			wpdata.pay_back1 		= tokens[0];
			wpdata.pay_back2  		= "";		 
			if(tokens.length > 1){
				wpdata.pay_back2  		= tokens[1];		 
			}
		 
		}catch(Exception e){
			errMsg = "ERR:从数据库查询缴费记录失败";
			return false;
		} finally {
			
		}
		
		printDataStr.append(toPrintDataStr(wpdata));
		
		return true;
	} 

	
	
	
	/**
	 * 其他-系统控制-打印配置-打印模板设置页面   预览
	 * @return
	 */
	@JSON(serialize=false)
	public String getTestPrintData(){
		
		if(result == null || result.isEmpty() || result.equals("")){		//value:
			result = SDDef.EMPTY;
			errMsg = "没有指定模板文件，文件名为空。";
			return SDDef.SUCCESS;
		}
		
		StringBuffer templateStr = new StringBuffer(); 
		String printDataStr = getTestString();
		|城东供电所|511线路|城东区112号|03118686868|售电员小李|201210212|客户张三|客户所属的行业|正常|160|终端1|03119876543|13012124545|1121|12|201210212|100|一般工商业用户单费率|0.81|报警方案1|力调方案1|主站计费|主站费控|主站缴费|1月1日|片区1|1324|是|备用参数1的文字|备用参数2的文字|备用参数3的文字|2013年1月5日|2310210210|2310210212|缴费|2|12.1|10.2|10.1|10.1|500.0|23.0|1000.0|壹仟元整|50.0|0.0|1053.0|壹仟零伍拾元整|10.0|52.0|20.0|100.0|10.0|10.0|0.0|0.0|0.0|0.0|0.0|0.0|0.0|缴费备用1|缴费备用2|缴费备用3|缴费备用4|缴费备用5|缴费备用6|缴费备用7|缴费备用8|缴费备用9|缴费备用10|20121221|1.0|30.0|60.0|0.0|90.0|10.0|10.0|10.0|10.0|10.0|10.0|电费备用1|电费备用2|电费备用3|电费备用4|电费备用5|电费备用6|电费备用7|电费备用8
		
		if(!getTemplateString(result,templateStr)){
			result = SDDef.EMPTY;
			errMsg = "读取模板文件失败:" + errMsg;
			return SDDef.SUCCESS;
		}
		
		result = templateStr.toString() + sept + printDataStr;		
		return SDDef.SUCCESS;
	}
	
	/**
	 * 其他-系统控制-打印配置-打印模板设置页面
	 * @return
	 */
	private String getTestString(){
		WebPrintData wpdata = new WebPrintData();
		
		wpdata.org_desc 	     = "城东供电所";  	//供电所              
		wpdata.line_desc 	     = "511线路";    	//变电站线路            
		wpdata.org_addr  	     = "城东区112号";	//购电地址             
		wpdata.org_telno 	     = "03118686868";	//服务电话             
		wpdata.yffman_desc	     = "售电员小李";		//售电操作员            
		wpdata.busi_no           = "201210212";    	//客户编号             
		wpdata.cons_desc         = "客户张三";       //客户名称             
		wpdata.trade1_desc       = "客户所属的行业"; //客户分类             
		wpdata.cus_state_desc    = "正常";          //客户状态             
		wpdata.cont_cap          = "160";           //变压器容量(kVA)       
		wpdata.rtu_desc 	     = "终端1";			//终端描述                   		
		wpdata.tel_no1           = "03119876543"; 	//客户固定电话           
		wpdata.tel_no2           = "13012124545";   //客户移动电话           
		wpdata.meter_id          = "1121";          //ESAM表号           
		wpdata.comm_addr       	 = "12";            //电表地址             
		wpdata.writecard_no      = "201210212"; 	//写卡户号
		wpdata.beilv 		     = "100"; 			//倍率
		wpdata.fee_type_desc     = "单费率"; //电价类型             
		wpdata.yffrate_desc      = "0.81";          //电价方案             
		wpdata.yffalarm_desc     = "报警方案1";     //报警方案             
		wpdata.cs_stand_desc     = "力调方案1";     //力调方案             
		wpdata.cacl_type_desc    = "主站计费";      //计费方式             
		wpdata.feectrl_type_desc = "主站费控";      //费控方式             
		wpdata.pay_type_desc     = "主站缴费";      //缴费方式             
		wpdata.jt_cycle_md       = "1月1日";        //阶梯周期切换日期         
		wpdata.area_desc 	     = "片区1";			//所属片区
		wpdata.np_cardno 	     = "1324";			//农排卡号
		wpdata.reprint_desc      = "补打";          //补打标志             
		                                                        
		wpdata.para_back1 	     = "备用参数1的文字";	//备用参数28           	
		wpdata.para_back2 	     = "备用参数2的文字";	//备用参数29           	
		wpdata.para_back3 	     = "备用参数3的文字";    //备用参数30           
		                                                       
		//缴费参数                                                 
		wpdata.paytime 			= "2013年1月5日10时20分17秒";    //缴费日期             
		wpdata.wasteno 			= "2310210210";		//流水号              
		wpdata.rewasteno 		= "2310210212";		//被冲正流水号           
		wpdata.op_type_desc 	= "缴费";		    //操作类型             
		wpdata.	buy_times 		= 2;	        	//购电次数             
		wpdata.bef_jsygbd 		= "12.1";		    //结算有功表底           
		wpdata.bef_jswgbd 		= "10.2";		    //结算无功表底           
		wpdata.bef_ygbd 		= "10.1";			//缴费前有功表底             
		wpdata.bef_wgbd 		= "10.1";			//缴费前无功表底             
		wpdata.bef_remain 		= 500.0;		    //缴费前剩余金额          
		wpdata.bef_shutdown_val = 23.0;	        	//缴费前断电止码          
		wpdata.pay_money 		= 1000.0;		    //缴费金额(元)          
		wpdata.pay_money_desc 	= "壹仟元整";	    //缴费金额大写字符串        
		wpdata.othjs_money 		= 50.0;	        	//结算金额(元)          
		wpdata.zb_money 		= 0.0;				//追补金额(元)             
		wpdata.all_money 		= 1053.0;		    //缴费总金额(元)         
		wpdata.all_money_desc 	= "壹仟零伍拾元整";	//缴费总金额大写字符串       
		wpdata.alarm_code 		= 10.0;		        //报警表底             
		wpdata.buy_dl 			= 52.0;			    //购电量                 
		wpdata.pay_bmc 			= 20.0;		        //表码差              
		wpdata.shutdown_val 	= 100.0;		    //断电止码             
		wpdata.alarm_money1 	= 10.0;		        //报警金额1(元)         
		wpdata.alarm_money2 	= 10.0;		        //报警金额2(元)      
		wpdata.aft_money 		= 15.0;		        //缴费后剩余金额(元)    
		wpdata.aft_money2 		= 30.0;		        //缴费后剩余金额2(元)   
		wpdata.total_pay_money 	= 5000.0;		    //累计缴费金额(元)     
		wpdata.jt_use_dl1 		= 1.0;		        //阶梯一档用电量                        
		wpdata.jt_use_dl2 		= 2.0;		        //阶梯二档用电量                        
		wpdata.jt_use_dl3 		= 3.0;		        //阶梯三档用电量                        
		wpdata.jt_use_dl4 		= 4.0;		        //阶梯四档用电量                        
		wpdata.pay_back1 		= "缴费备用1";	    //缴费备用61           	                 
		wpdata.pay_back2 		= "缴费备用2";	    //缴费备用62           	                 
		wpdata.pay_back3 		= "缴费备用3";	    //缴费备用63           	                 
		wpdata.pay_back4 		= "缴费备用4";	    //缴费备用64           	                 
		wpdata.pay_back5 		= "缴费备用5";	    //缴费备用65           	                 
		wpdata.pay_back6 		= "缴费备用6";	    //缴费备用66           	                 
		wpdata.pay_back7 		= "缴费备用7";	    //缴费备用67           	                 
		wpdata.pay_back8 		= "缴费备用8";		//缴费备用68                            
		wpdata.pay_back9 		= "缴费备用9";	    //缴费备用69           	                 
		wpdata.pay_back10 		= "缴费备用10";  	//缴费备用70                            
		                                                       
		//发行电费                                                 
		wpdata.fx_mdhmi 		= "1月1日20时00分00秒";	//发行电费日期            
		wpdata.fx_ele_money 	= 1.0;			//发行电度电费(元)        	
		wpdata.fx_jbf_money 	= 30.0;			//发行基本电费(元)        	
		wpdata.fx_powrate_money = 60.0;			//发行力调电费(元)        
		wpdata.fx_other_money 	= 0.0;			//发行其他电费(元)        
		wpdata.fx_all_money 	= 90.0;			//发行总电费(元)         	
		wpdata.fx_ygbd 			= 10.0;	        //发行有功表底           
		wpdata.fx_wgbd 			= 10.1;	        //发行无功表底           
		wpdata.fx_ygdl 			= 11.0;	        //发行有功电量           
		wpdata.fx_wgdl 			= 11.1;	        //发行无功电量           
		wpdata.fx_jtygbd 		= 12.0;		    //阶梯发行有功表底         
		wpdata.fx_jtygdl 		= 12.1;			//阶梯累计用电量          	
		wpdata.fx_back1 		= "电费备用1";	//电费备用83           		
		wpdata.fx_back2 		= "电费备用2";	//电费备用84           		
		wpdata.fx_back3 		= "电费备用3";	//电费备用85           		
		wpdata.fx_back4 		= "电费备用4";	//电费备用86           		
		wpdata.fx_back5 		= "电费备用5";	//电费备用87           		
		wpdata.fx_back6 		= "电费备用6";	//电费备用88           		
		wpdata.fx_back7 		= "电费备用7";	//电费备用89           		
		wpdata.fx_back8 		= "电费备用8";	//电费备用90           		

		
		return   toPrintDataStr(wpdata);
		
	}
	
	
	/**读取模板文件
	 * 返回十六进制的字符串。
	 * @param fileName
	 * @param templateStr
	 * @return
	 */
	private boolean getTemplateString(String fileName,StringBuffer templateStr){
		String filePath = WebConfig.real_basepath + "\\print-loc\\" + fileName; 
		File file = new File(filePath); 
		String tempStr = "";
		FileInputStream in = null;
		//文件存在，读取内容，并转换成字符串返回。
		if(file.exists()){
			try {
				in = new FileInputStream(file);
				int count=0;
				byte buffer[] = new byte[1024];
				while ((count = in.read(buffer)) != -1) {
					// 一次只写入count个byte, 否则会写入1024个byte。
					for (int i = 0; i < count; i++) {
						tempStr += String.format("%02X", buffer[i]);// 十六进制字符串依次存入。
					}
				}
			} catch(Exception e) {
				errMsg = "读取打印模板" + filePath + "失败！";
				return false;
			} finally {
				if(in != null) {
					try {
						in.close();
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
			}
			templateStr.append(tempStr);
		} else {
			errMsg = "文件" + fileName + "不存在！";
			return false;
		}
		
		return true;
	}
	

	/**农排卡式--取得打印内容（补打发票页面）
	 * 查询预付费状态、数据库的用户信息。
	 * 返回一个字符串，各个参数间|分隔。
	 * @param yffDataOperIdx
	 * @param printDataStr
	 * @return
	 * 
	 */
	private boolean getReprintDataNpCard(String yffDataOperIdx, StringBuffer printDataStr){

		WebPrintData 	wpdata = new WebPrintData(); 
		JDBCDao 		j_dao  = new JDBCDao();
		
		JSONObject json   = JSONObject.fromObject(yffDataOperIdx);
		Integer area_id   = json.getInt("rtu_id");
		Short  	farmer_id = (short)json.getInt("sub_id");
		String 	wasteno   = json.getString("wasteno");	//流水号
		String  op_type   = json.getString("op_type");	//操作类型
		String  op_date   = json.getString("op_date");	//操作日期
		String  op_time   = json.getString("op_time");	//购电时间
		byte  	reprint   = (byte)CommBase.strtof(json.getString("reprint"));	//补打标志（是不补打发票页）
		while(op_time.length() < 6) op_time = "0" + op_time;
		

		//从数据库查询
		String sql = "select o.describe org_desc,o.addr org_addr,o.telno org_telno,f.farmer_no,f.describe cons_desc,fps.cus_state,"+
					" f.phone tel_no1,f.mobile tel_no2,a.describe area_desc,f.card_no np_cardno"+
					" from orgpara o,areapara a,farmerpara f,farmerpay_state fps"+
					" where a.id=f.area_id and a.org_id=o.id and fps.area_id=f.area_id and fps.farmer_id=f.id" +
					" and f.area_id=" + area_id + " and f.id=" + farmer_id;
		
		String sqlyddataben = "select * from yddataben.dbo.nyff" + op_date.substring(0,4) + " where wasteno='" + wasteno + "'";
		
		try {
		
			List<Map<String,Object>> listp = j_dao.result(sql);
			List<Map<String,Object>> listd = j_dao.result(sqlyddataben);
		
			if(listp == null || listp.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的用户档案.";
				return false;
			}else if(listd == null || listd.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的缴费记录.";
				return false;
			}
		
			//获取一条数据存入map
			Map<String,Object> mapp = listp.get(0);
			Map<String,Object> mapd = listd.get(0);
	
			//给wpdata赋值
			wpdata.org_desc			= CommBase.CheckString(mapp.get("org_desc")); 	//供电所
			wpdata.org_addr			= CommBase.CheckString(mapp.get("org_addr")); //购电地址
			wpdata.org_telno		= CommBase.CheckString(mapp.get("org_telno"));//服务电话
			wpdata.yffman_desc		= CommBase.CheckString(mapd.get("op_man"));//售电操作员
			wpdata.busi_no			= CommBase.CheckString(mapp.get("farmer_no"));//客户编号
			wpdata.cons_desc		= CommBase.CheckString(mapp.get("cons_desc"));//客户名称
			wpdata.cus_state_desc 	= Rd.getDict(Dict.DICTITEM_YFFCUSSTATE, mapp.get("cus_state"));//客户状态
			wpdata.tel_no1			= CommBase.CheckString(mapp.get("tel_no1"));//客户固定电话
			wpdata.tel_no2			= CommBase.CheckString(mapp.get("tel_no2"));//客户移动电话
			wpdata.area_desc		= CommBase.CheckString(mapp.get("area_desc"));//所属片区
			wpdata.np_cardno 		= CommBase.CheckString(mapp.get("np_cardno"));//农排卡号
			wpdata.reprint_desc		= (reprint == 1 ? "补打" : "");//补打标志
			
			wpdata.paytime			=	CommFunc.FormatToYMD(op_date)+ CommFunc.FormatToHMS(op_time,2);	//缴费日期               			
			wpdata.wasteno          =  	wasteno;	//流水号              
			wpdata.rewasteno        =  	CommBase.CheckString(mapd.get("rewasteno"));	//被冲正流水号        
			wpdata.op_type_desc     =  	Rd.getDict(Dict.DICTITEM_YFFOPTYPE, op_type);	//操作类型            
			wpdata.buy_times        =  	CommBase.strtoi(mapd.get("buy_times").toString());	//购电次数            
			
			Double all_money = Double.parseDouble(CommBase.CheckNum(mapd.get("all_money")));			
			wpdata.bef_remain       =  	Double.parseDouble(CommBase.CheckNum(mapd.get("ls_remain")));	//缴费前剩余金额 =缴费后剩余金额-本次缴费总金额     
			wpdata.pay_money        =  	Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money")));	//缴费金额(元)        
			wpdata.pay_money_desc   =  	MoneyNum2Char.convertChar(Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money"))));	//缴费金额大写字符串  
			wpdata.othjs_money      =  	Double.parseDouble(CommBase.CheckNum(mapd.get("othjs_money")));//结算金额(元)        
			wpdata.zb_money         =  	Double.parseDouble(CommBase.CheckNum(mapd.get("zb_money")));	//追补金额(元)        
			wpdata.all_money        =  	all_money;	//缴费总金额(元)      
			wpdata.all_money_desc   =  	MoneyNum2Char.convertChar(all_money);	//缴费总金额大写字符串
			wpdata.aft_money        =  	Double.parseDouble(CommBase.CheckNum(mapd.get("cur_remain"))); //缴费后剩余金额(元)  
			wpdata.aft_money        =  	Double.parseDouble(CommBase.CheckNum(mapd.get("now_remain2")));//缴费后剩余金额2(元)  
			wpdata.total_pay_money	=  	Double.parseDouble(CommBase.CheckNum(mapd.get("total_gdz")));	//累计缴费金额(元)    
			
			
		}catch(Exception e){
			errMsg = "ERR:从数据库查询缴费记录失败";
			return false;
		} finally {
			
		}
		
		printDataStr.append(toPrintDataStr(wpdata));
		
		return true;
	} 
	
	
	/**低压主站--取得打印内容（补打发票页面）
	 * 查询预付费状态、数据库的用户信息。
	 * 返回一个字符串，各个参数间|分隔。
	 * @param yffDataOperIdx
	 * @param printDataStr
	 * @return
	 * 
	 */
	private boolean getReprintDataDyMaster(String yffDataOperIdx, StringBuffer printDataStr){

		WebPrintData 	wpdata = new WebPrintData(); 
		JDBCDao 		j_dao  = new JDBCDao();
		
		JSONObject json  = JSONObject.fromObject(yffDataOperIdx);
		Integer rtu_id   = json.getInt("rtu_id");
		Short  	sub_id   = (short)json.getInt("sub_id");
		String 	wasteno  = json.getString("wasteno");	//流水号
		String  op_type  = json.getString("op_type");	//操作类型
		String  op_date  = json.getString("op_date");	//操作日期
		String  op_time  = json.getString("op_time");	//购电时间
		byte  reprint   = (byte)CommBase.strtof(json.getString("reprint"));	//补打标志（是不补打发票页）
		
		while(op_time.length() < 6) op_time = "0" + op_time;

		//从数据库查询
		String sql = "select r.id as rtu_id,r.describe as rtu_desc,res.cons_no,res.describe cons_desc,res.phone as tel_no1,res.mobile as tel_no2,o.describe org_desc,o.addr org_addr,o.telno org_telno,mt.meter_id,mt.comm_addr,a.pt_ratio*a.ct_ratio as beilv," +
					 "c.cus_state,b.cacl_type,b.feectrl_type,b.pay_type,b.jt_cycle_md,b.cb_dayhour,b.fee_begindate,b.power_relaf,b.power_rela1,power_rela2,b.feeproj_id,b.yffalarm_id,c.kh_date,c.jt_total_dl,c.total_gdz,c.buy_times,d.ratej_td1,d.ratej_td2,ratej_td3 " +
					 "from conspara con,orgpara o,rtupara r,residentpara res,meterpara mt,mppara a,mppay_para b,mppay_state c,yffratepara d " +
					 "where con.app_type=3 and a.rtu_id=b.rtu_id and a.rtu_id=c.rtu_id and a.id=b.mp_id and a.id=c.mp_id " +
					 "and r.id=a.rtu_id and r.cons_id=con.id and con.org_id=o.id and res.rtu_id=r.id and mt.resident_id=res.id and mt.rtu_id=r.id and mt.mp_id=a.id and b.feeproj_id=d.id and " +
					 "a.rtu_id=" + rtu_id + " and a.id=" + sub_id;
		
		String sqlyddataben = "select * from yddataben.dbo.jyff" + op_date.substring(0,4) + " where wasteno='" + wasteno + "'";
		
		try {
		
			List<Map<String,Object>> listp = j_dao.result(sql);
			List<Map<String,Object>> listd = j_dao.result(sqlyddataben);
		
			if(listp == null || listp.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的用户档案.";
				return false;
			}else if(listd == null || listd.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的缴费记录.";
				return false;
			}
		
			//获取一条数据存入map
			Map<String,Object> mapp = listp.get(0);
			Map<String,Object> mapd = listd.get(0);
	
			//给wpdata赋值
			wpdata.org_desc			= CommBase.CheckString(mapp.get("org_desc")); 	//供电所
			wpdata.org_addr			= CommBase.CheckString(mapp.get("org_addr")); //购电地址
			wpdata.org_telno		= CommBase.CheckString(mapp.get("org_telno"));//服务电话
			wpdata.yffman_desc		= CommBase.CheckString(mapd.get("op_man"));//售电操作员
			wpdata.busi_no			= CommBase.CheckString(mapp.get("cons_no"));//客户编号
			wpdata.cons_desc		= CommBase.CheckString(mapp.get("cons_desc"));//客户名称
			wpdata.cus_state_desc 	= Rd.getDict(Dict.DICTITEM_YFFCUSSTATE, mapp.get("cus_state"));//客户状态
			wpdata.rtu_desc			= CommBase.CheckString(mapp.get("rtu_desc"));//集中器描述
			wpdata.tel_no1			= CommBase.CheckString(mapp.get("tel_no1"));//客户固定电话
			wpdata.tel_no2			= CommBase.CheckString(mapp.get("tel_no2"));//客户移动电话
			wpdata.meter_id 		= CommBase.CheckString(mapp.get("meter_id"));//ESAM表号
			wpdata.comm_addr		= CommBase.CheckString(mapp.get("comm_addr"));//电表地址
			wpdata.beilv			= CommBase.CheckString(mapp.get("beilv")); 	//倍率
			
			YffRatePara yffrate 	= (YffRatePara)Rd.getRecord(YDTable.TABLECLASS_YFFRATEPARA, Short.parseShort(CommBase.CheckNum(mapp.get("feeproj_id"))));
			wpdata.fee_type_desc	= Rd.getDict(Dict.DICTITEM_FEELVTYPE, yffrate.getFeeType()); //电价类型(char16)
			wpdata.yffrate_desc  	= getDJLX(yffrate); //电价方案(char64)
			
			YffAlarmPara yffalarm 	= (YffAlarmPara)Rd.getRecord(YDTable.TABLECLASS_YFFALARMPARA, Short.parseShort(CommBase.CheckNum(mapp.get("yffalarm_id"))));
			wpdata.yffalarm_desc 	= yffalarm.getDescribe();//报警方案
			wpdata.cacl_type_desc 	= Rd.getDict(Dict.DICTITEM_FEETYPE, mapp.get("cacl_type")); //计费方式0:无 1:金额计费 2:表底计费
			wpdata.feectrl_type_desc= Rd.getDict(Dict.DICTITEM_PREPAYTYPE, mapp.get("feectrl_type")); //费控方式0:本地费控 1:主站费控
			wpdata.pay_type_desc	= Rd.getDict(Dict.DICTITEM_PAYTYPE, mapp.get("pay_type"));//缴费方式0:卡式 1:远程 2:主站
			wpdata.jt_cycle_md 		=  CommFunc.FormatToMD(mapp.get("jt_cycle_md")); 	//阶梯周期切换日期
			wpdata.reprint_desc		= (reprint == 1 ? "补打" : "");//补打标志
			
			wpdata.paytime			=	CommFunc.FormatToYMD(op_date)+ CommFunc.FormatToHMS(op_time,2);		//缴费日期               			
			wpdata.wasteno          =  	wasteno;	//流水号              
			wpdata.rewasteno        =  	CommBase.CheckString(mapd.get("rewasteno"));	//被冲正流水号        
			wpdata.op_type_desc     =  	Rd.getDict(Dict.DICTITEM_YFFOPTYPE, op_type);	//操作类型            
			wpdata.buy_times        =  	CommBase.strtoi(mapd.get("buy_times").toString());	//购电次数            
			
			String str_dlgl	= CommBase.CheckNum(mapp.get("power_relaf"));	//动力关联
			int main_mp 	= CommBase.strtoi(str_dlgl);
			
			int mp1 = 0, mp2 = 0;
			if(main_mp > 0) {	//有动力关联
				mp1 = CommBase.strtoi(CommBase.CheckNum(mapp.get("power_rela1")));
				mp2 = CommBase.strtoi(CommBase.CheckNum(mapp.get("power_rela2")));
			}
			String jsygbd = "",jswgbd = "",calczyz = "";
			if(main_mp <= 0){
				jsygbd = CommBase.CheckString(mapd.get("jsbd_zyz"));
				jswgbd = CommBase.CheckString(mapd.get("jsbd_zwz"));
				calczyz = CommBase.CheckString(mapd.get("calc_zyz"));
		    }
			if(mp1 > 0){
		    	jsygbd 	+= "-" + CommBase.CheckString(mapd.get("jsbd1_zyz"));
		    	jswgbd 	+= "-" + CommBase.CheckString(mapd.get("jsbd1_zwz"));
		    	calczyz += "-" + CommBase.CheckString(mapd.get("calc1_zyz"));
		    }
			if(mp2 > 0){
		    	jsygbd  += "-" + CommBase.CheckString(mapd.get("jsbd2_zyz"));
		    	jswgbd  += "-" + CommBase.CheckString(mapd.get("jsbd2_zwz"));
		    	calczyz += "-" + CommBase.CheckString(mapd.get("calc2_zyz"));
		    }
			
			wpdata.bef_jsygbd       =  	jsygbd;	//结算有功表底        
			wpdata.bef_jswgbd       =  	jswgbd;	//结算无功表底        
			wpdata.bef_ygbd         =  	calczyz;	//缴费前有功表底      
			
			Double aft_money = Double.parseDouble(CommBase.CheckNum(mapd.get("now_remain")));//缴费后剩余金额
			Double all_money = Double.parseDouble(CommBase.CheckNum(mapd.get("all_money")));			
			wpdata.bef_remain       =  	aft_money - all_money;	//缴费前剩余金额 =缴费后剩余金额-本次缴费总金额     
			wpdata.pay_money        =  	Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money")));	//缴费金额(元)        
			wpdata.pay_money_desc   =  	MoneyNum2Char.convertChar(Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money"))));	//缴费金额大写字符串  
			wpdata.othjs_money      =  	Double.parseDouble(CommBase.CheckNum(mapd.get("othjs_money")));//结算金额(元)        
			wpdata.zb_money         =  	Double.parseDouble(CommBase.CheckNum(mapd.get("zb_money")));	//追补金额(元)        
			wpdata.all_money        =  	all_money;	//缴费总金额(元)      
			wpdata.all_money_desc   =  	MoneyNum2Char.convertChar(all_money);	//缴费总金额大写字符串
			wpdata.alarm_money1     =  	Double.parseDouble(CommBase.CheckNum(mapd.get("alarm1")));	//报警金额1(元)       
			wpdata.alarm_money2     =  	Double.parseDouble(CommBase.CheckNum(mapd.get("alarm2")));	//报警金额2(元)       
			wpdata.aft_money        =  	aft_money;	//缴费后剩余金额(元)  
			wpdata.total_pay_money	=  	Double.parseDouble(CommBase.CheckNum(mapd.get("total_gdz")));	//累计缴费金额(元)    
			
			//根据阶梯累计用电量计算1-4档阶梯用电量
			Double jt_total_dl = Double.parseDouble(CommBase.CheckNum(mapd.get("jt_total_dl")));//阶梯累计用电量
			int fee_begindate= Integer.parseInt(CommBase.CheckNum(mapp.get("fee_begindate")));//费率启用日期YYYYMMDD
			int kh_date= Integer.parseInt(CommBase.CheckNum(mapp.get("kh_date")));//开户日期YYYYMMDD
			int flag_date = kh_date > fee_begindate ? kh_date : fee_begindate;//取开户日期和费率启用日期中较晚的作为阶梯开始时间
			
			if(flag_date>0 && (yffrate.getFeeType() == SDDef.YFF_FEETYPE_JTFL || yffrate.getFeeType() == SDDef.YFF_FEETYPE_MIXJT)){//阶梯或者混合阶梯
				Double max1=0.0,max2=0.0,max3=0.0;//各档电量最大值。
				Double td1 = (yffrate.getRatejTd1() == null ? 0 : yffrate.getRatejTd1());
				Double td2 = (yffrate.getRatejTd2() == null ? 0 : yffrate.getRatejTd2());
				Double td3 = (yffrate.getRatejTd3() == null ? 0 : yffrate.getRatejTd3());
				if(yffrate.getRatejType() == SDDef.YFF_RATETYPE_MON){//月度方案
					max1 = td1;
					max2 = max1 + td2;
					max3 = max2 + td3;
				}else if(yffrate.getRatejType() == SDDef.YFF_RATETYPE_YEAR){//年度方案
					int op_date_int = Integer.parseInt(op_date)/10000;
					int jtyear = flag_date/10000;					
					if(jtyear < op_date_int){//去年已开户，启用了阶梯费率。						
						max1 = td1 * 12 ;
						max2 = max1 + td2 * 12;
						max3 = max2 + td3 * 12;
					}else{//启用阶梯费率不足一年。各档阶梯量 =实际月份*每月各档电量
						int monnum = 13 - (flag_date % 10000) / 100; // 12个月-当前月份 + 1
						max1 = td1 * monnum ;
						max2 = max1 + td2 * monnum;
						max3 = max2 + td3 * monnum;
					}				
				}
				
				if(jt_total_dl <= max1){
					wpdata.jt_use_dl1 = jt_total_dl;//第一档以内
				}else if(jt_total_dl < max2 || yffrate.getRatejNum() == 2){ //不高过二档或者只分两个档
					wpdata.jt_use_dl1 = td1;
					wpdata.jt_use_dl2 = jt_total_dl - max1;
				}else if(jt_total_dl < max3 || yffrate.getRatejNum() == 3){ //不高过三档或者只分三个档
					wpdata.jt_use_dl1 = td1;
					wpdata.jt_use_dl2 = td2;
					wpdata.jt_use_dl3 = jt_total_dl - max2;
				}else if(jt_total_dl > max3){ //
					wpdata.jt_use_dl1 = td1;	//阶梯一档用电量
					wpdata.jt_use_dl2 = td2;	//阶梯二档用电量
					wpdata.jt_use_dl3 = td3;	//阶梯三档用电量
					wpdata.jt_use_dl4 = jt_total_dl - max3;   	//阶梯四档用电量
				}				
			} 
			
			//发行电费相关信息
			String cb_dayhour  = CommBase.CheckNum(mapp.get("cb_dayhour"));//抄表日DDHH
			String fxdf_ym = op_date.substring(6,8) + op_time.substring(0,2);
			if(Integer.parseInt(cb_dayhour) < Integer.parseInt(fxdf_ym)) //本月已抄表
				fxdf_ym =  op_date.substring(0,6);
			else {	//本月未抄表,取上个月的发行记录				
				try {						
					Calendar cal=Calendar.getInstance();
					cal.set(Calendar.YEAR,Integer.parseInt(op_date.substring(0,4)));
					cal.add(Calendar.MONTH, -1);    //得到前一个月 
					SimpleDateFormat sdf = new SimpleDateFormat("yyyyMM");//格式化对象
					fxdf_ym =sdf.format(cal.getTime()); 
				} catch (Exception e) {
					//e.printStackTrace();
					fxdf_ym = op_date.substring(6,8);
				};
			}
			
			String sqlFxData = "select * from yddataben.dbo.MpFxMoney" + op_date.substring(0,4) + " where rtu_id=" + rtu_id + " and mp_id=" + CommBase.CheckString(mapd.get("mp_id")) + " and fxdf_ym=" + fxdf_ym;
			List<Map<String,Object>> listf = j_dao.result(sqlFxData);
			if(listf != null && listf.size() > 0){
				Map<String,Object> mapf = listf.get(0);
				wpdata.fx_jtygbd        =  Double.parseDouble(CommBase.CheckNum(mapf.get("calc_zyz")));		//阶梯发行有功表底    
				wpdata.fx_jtygdl        =  Double.parseDouble(CommBase.CheckNum(mapf.get("jt_total_dl")));	//阶梯累计用电量	
			}
		}catch(Exception e){
			errMsg = "ERR:从数据库查询缴费记录失败";
			return false;
		} finally {
			
		}
		
		printDataStr.append(toPrintDataStr(wpdata));
		
		return true;
	} 
	
	
	/**低压远程--取得打印内容（补打发票页面）
	 * 查询预付费状态、数据库的用户信息。
	 * 返回一个字符串，各个参数间|分隔。
	 * @param yffDataOperIdx
	 * @param printDataStr
	 * @return
	 * 
	 */
	private boolean getReprintDataDyRemote(String yffDataOperIdx, StringBuffer printDataStr){

		WebPrintData 	wpdata = new WebPrintData(); 
		JDBCDao 		j_dao  = new JDBCDao();
		
		JSONObject json  = JSONObject.fromObject(yffDataOperIdx);
		Integer rtu_id   = json.getInt("rtu_id");
		Short  	sub_id   = (short)json.getInt("sub_id");
		String 	wasteno  = json.getString("wasteno");	//流水号
		String  op_type  = json.getString("op_type");	//操作类型
		String  op_date  = json.getString("op_date");	//操作日期
		String  op_time  = json.getString("op_time");	//购电时间
		String  ext_info = json.getString("ext_info");	//额外信息 zxp
		byte  reprint   = (byte)CommBase.strtof(json.getString("reprint"));	//补打标志（是不补打发票页）
		while(op_time.length() < 6) op_time = "0" + op_time;
		

		//从数据库查询
		String sql = "select r.id as rtu_id,r.describe as rtu_desc,res.cons_no,res.describe cons_desc,res.phone as tel_no1,res.mobile as tel_no2,o.describe org_desc,o.addr org_addr,o.telno org_telno,mt.meter_id,mt.comm_addr,a.pt_ratio*a.ct_ratio as beilv," +
					 "c.cus_state,b.cacl_type,b.feectrl_type,b.pay_type,b.jt_cycle_md,b.cb_dayhour,b.fee_begindate,b.power_relaf,b.power_rela1,power_rela2,b.feeproj_id,b.yffalarm_id,c.kh_date,c.jt_total_dl,c.total_gdz,c.buy_times,c.buy_dl,d.ratej_td1,d.ratej_td2,ratej_td3 " +
					 "from conspara con,orgpara o,rtupara r,residentpara res,meterpara mt,mppara a,mppay_para b,mppay_state c,yffratepara d " +
					 "where con.app_type=3 and a.rtu_id=b.rtu_id and a.rtu_id=c.rtu_id and a.id=b.mp_id and a.id=c.mp_id " +
					 "and r.id=a.rtu_id and r.cons_id=con.id and con.org_id=o.id and res.rtu_id=r.id and mt.resident_id=res.id and mt.rtu_id=r.id and mt.mp_id=a.id and b.feeproj_id=d.id and " +
					 "a.rtu_id=" + rtu_id + " and a.id=" + sub_id;
		
		String sqlyddataben = "select * from yddataben.dbo.jyff" + op_date.substring(0,4) + " where wasteno='" + wasteno + "'";
		
		try {		
			List<Map<String,Object>> listp = j_dao.result(sql);
			List<Map<String,Object>> listd = j_dao.result(sqlyddataben);
		
			if(listp == null || listp.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的用户档案.";
				return false;
			}else if(listd == null || listd.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的缴费记录.";
				return false;
			}
		
			//获取一条数据存入map
			Map<String,Object> mapp = listp.get(0);
			Map<String,Object> mapd = listd.get(0);
	
			//给wpdata赋值
			wpdata.org_desc			= CommBase.CheckString(mapp.get("org_desc")); 	//供电所
			wpdata.org_addr			= CommBase.CheckString(mapp.get("org_addr")); //购电地址
			wpdata.org_telno		= CommBase.CheckString(mapp.get("org_telno"));//服务电话
			wpdata.yffman_desc		= CommBase.CheckString(mapd.get("op_man"));//售电操作员
			wpdata.busi_no			= CommBase.CheckString(mapp.get("cons_no"));//客户编号
			wpdata.cons_desc		= CommBase.CheckString(mapp.get("cons_desc"));//客户名称
			wpdata.cus_state_desc 	= Rd.getDict(Dict.DICTITEM_YFFCUSSTATE, mapp.get("cus_state"));//客户状态
			wpdata.rtu_desc			= CommBase.CheckString(mapp.get("rtu_desc"));//集中器描述
			wpdata.tel_no1			= CommBase.CheckString(mapp.get("tel_no1"));//客户固定电话
			wpdata.tel_no2			= CommBase.CheckString(mapp.get("tel_no2"));//客户移动电话
			wpdata.meter_id 		= CommBase.CheckString(mapp.get("meter_id"));//ESAM表号
			wpdata.comm_addr		= CommBase.CheckString(mapp.get("comm_addr"));//电表地址
			wpdata.beilv			= CommBase.CheckString(mapp.get("beilv")); 	//倍率
			
			YffRatePara yffrate 	= (YffRatePara)Rd.getRecord(YDTable.TABLECLASS_YFFRATEPARA, Short.parseShort(CommBase.CheckNum(mapp.get("feeproj_id"))));
			wpdata.fee_type_desc	= Rd.getDict(Dict.DICTITEM_FEELVTYPE, yffrate.getFeeType()); //电价类型(char16)
			wpdata.yffrate_desc  	= getDJLX(yffrate); //电价方案(char64)
			
//			YffAlarmPara yffalarm 	= (YffAlarmPara)Rd.getRecord(YDTable.TABLECLASS_YFFALARMPARA, Short.parseShort(CommBase.CheckNum(mapp.get("yffalarm_id"))));
//			wpdata.yffalarm_desc 	= yffalarm.getDescribe();//报警方案
			wpdata.cacl_type_desc 	= Rd.getDict(Dict.DICTITEM_FEETYPE, mapp.get("cacl_type")); //计费方式0:无 1:金额计费 2:表底计费
			wpdata.feectrl_type_desc= Rd.getDict(Dict.DICTITEM_PREPAYTYPE, mapp.get("feectrl_type")); //费控方式0:本地费控 1:主站费控
			wpdata.pay_type_desc	= Rd.getDict(Dict.DICTITEM_PAYTYPE, mapp.get("pay_type"));//缴费方式0:卡式 1:远程 2:主站
			wpdata.jt_cycle_md 		=   CommFunc.FormatToMD(mapp.get("jt_cycle_md")); 	//阶梯周期切换日期
			wpdata.reprint_desc		= (reprint == 1 ? "补打" : "");//补打标志
			
			wpdata.paytime			=	CommFunc.FormatToYMD(op_date, "day")+" "+ CommFunc.FormatToHMS(op_time,1);		//缴费日期               			
			wpdata.wasteno          =  	wasteno;	//流水号              
			wpdata.rewasteno        =  	CommBase.CheckString(mapd.get("rewasteno"));	//被冲正流水号        
			wpdata.op_type_desc     =  	Rd.getDict(Dict.DICTITEM_YFFOPTYPE, op_type);	//操作类型            
			wpdata.buy_times        =  	CommBase.strtoi(mapd.get("buy_times").toString());	//购电次数            
			wpdata.buy_dl			=   Double.parseDouble(CommBase.CheckNum(mapd.get("buy_dl")));		//购电量
			wpdata.pay_back1		= 	mapd.get("rewasteno").toString();	//Token
			
			if (ext_info.isEmpty() == false) {		//开户操作
				String[] sl = ext_info.split("---");
				if (sl.length == 2) {
					wpdata.pay_back1 = sl[0];
					wpdata.pay_back2 = sl[1];
					wpdata.pay_back3 = mapd.get("rewasteno").toString();	//Token
				}
			}
			
			String str_dlgl	= CommBase.CheckNum(mapp.get("power_relaf"));	//动力关联
			int main_mp 	= CommBase.strtoi(str_dlgl);
			
			int mp1 = 0, mp2 = 0;
			if(main_mp > 0) {	//有动力关联
				mp1 = CommBase.strtoi(CommBase.CheckNum(mapp.get("power_rela1")));
				mp2 = CommBase.strtoi(CommBase.CheckNum(mapp.get("power_rela2")));
			}
			String calc_zyz = "";
			if(main_mp <= 0){
				calc_zyz = CommBase.CheckString(mapd.get("calc_zyz"));
		    }
			if(mp1 > 0){
		    	calc_zyz += "-" + CommBase.CheckString(mapd.get("calc1_zyz"));
		    }
			if(mp2 > 0){
		    	calc_zyz += "-" + CommBase.CheckString(mapd.get("calc2_zyz"));
		    }
			
			wpdata.bef_ygbd         =  	calc_zyz;	//缴费前有功表底      
			
			Double aft_money = Double.parseDouble(CommBase.CheckNum(mapd.get("now_remain")));
			Double all_money = Double.parseDouble(CommBase.CheckNum(mapd.get("all_money")));			
			wpdata.bef_remain       =  	aft_money - all_money ;	//缴费前剩余金额 =缴费后剩余金额-本次缴费总金额     
			wpdata.pay_money        =  	Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money")));	//缴费金额(元)        
			wpdata.pay_money_desc   =  	MoneyNum2Char.convertChar(Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money"))));	//缴费金额大写字符串  
			wpdata.all_money        =  	all_money;	//缴费总金额(元)      
			wpdata.all_money_desc   =  	MoneyNum2Char.convertChar(all_money);	//缴费总金额大写字符串
			wpdata.alarm_money1     =  	Double.parseDouble(CommBase.CheckNum(mapd.get("alarm1")));	//报警金额1(元)       
			wpdata.alarm_money2     =  	Double.parseDouble(CommBase.CheckNum(mapd.get("alarm2")));	//报警金额2(元)       
			wpdata.aft_money        =  	aft_money;	//缴费后剩余金额(元)  
			wpdata.aft_money        =  	Double.parseDouble(CommBase.CheckNum(mapd.get("now_remain2")));//缴费后剩余金额2(元)  
			wpdata.total_pay_money	=  	Double.parseDouble(CommBase.CheckNum(mapd.get("total_gdz")));	//累计缴费金额(元)    
			
			//根据阶梯累计用电量计算1-4档阶梯用电量
			Double jt_total_dl = Double.parseDouble(CommBase.CheckNum(mapd.get("jt_total_dl")));//阶梯累计用电量
			int fee_begindate= Integer.parseInt(CommBase.CheckNum(mapp.get("fee_begindate")));//费率启用日期YYYYMMDD
			int kh_date= Integer.parseInt(CommBase.CheckNum(mapp.get("kh_date")));//开户日期YYYYMMDD
			int flag_date = kh_date > fee_begindate ? kh_date : fee_begindate;//取开户日期和费率启用日期中较晚的作为阶梯开始时间
			
			if(flag_date>0 && (yffrate.getFeeType() == SDDef.YFF_FEETYPE_JTFL || yffrate.getFeeType() == SDDef.YFF_FEETYPE_MIXJT)){//阶梯或者混合阶梯
				Double max1=0.0,max2=0.0,max3=0.0;//各档电量最大值。
				Double td1 = (yffrate.getRatejTd1() == null ? 0 : yffrate.getRatejTd1());
				Double td2 = (yffrate.getRatejTd2() == null ? 0 : yffrate.getRatejTd2());
				Double td3 = (yffrate.getRatejTd3() == null ? 0 : yffrate.getRatejTd3());
				
				if(yffrate.getRatejType() == SDDef.YFF_RATETYPE_MON){//月度方案
					max1 = td1;
					max2 = max1 + td2;
					max3 = max2 + td3;
				}else if(yffrate.getRatejType() == SDDef.YFF_RATETYPE_YEAR){//年度方案
					int op_date_int = Integer.parseInt(op_date)/10000;
					int jtyear = flag_date/10000;					
					if(jtyear < op_date_int){//去年已开户，启用了阶梯费率。						
						max1 = td1 * 12 ;
						max2 = max1 + td2 * 12;
						max3 = max2 + td3 * 12;
					}else{//启用阶梯费率不足一年。各档阶梯量 =实际月份*每月各档电量
						int monnum = 13 - (flag_date % 10000) / 100; // 12个月-当前月份 + 1
						max1 = td1 * monnum ;
						max2 = max1 + td2 * monnum;
						max3 = max2 + td3 * monnum;
					}				
				}
				
				if(jt_total_dl < max1){
					wpdata.jt_use_dl1 = jt_total_dl;//第一档以内
				}else if(jt_total_dl < max2 || yffrate.getRatejNum() == 2){ //不高过二档或者只分两个档
					wpdata.jt_use_dl1 = td1;
					wpdata.jt_use_dl2 = jt_total_dl - max1;
				}else if(jt_total_dl < max3 || yffrate.getRatejNum() == 3){ //不高过三档或者只分三个档
					wpdata.jt_use_dl1 = td1;
					wpdata.jt_use_dl2 = td2;
					wpdata.jt_use_dl3 = jt_total_dl - max2;
				}else if(jt_total_dl > max3){ //
					wpdata.jt_use_dl1 = td1;	//阶梯一档用电量
					wpdata.jt_use_dl2 = td2;	//阶梯二档用电量
					wpdata.jt_use_dl3 = td3;	//阶梯三档用电量
					wpdata.jt_use_dl4 = jt_total_dl - max3;   	//阶梯四档用电量
				}				
			} 
			
			//发行电费相关信息
			String cb_dayhour  = CommBase.CheckNum(mapp.get("cb_dayhour"));//抄表日DDHH
			String fxdf_ym = op_date.substring(6,8) + op_time.substring(0,2);
			if(Integer.parseInt(cb_dayhour) < Integer.parseInt(fxdf_ym)) //本月已抄表
				fxdf_ym =  op_date.substring(0,6);
			else {	//本月未抄表,取上个月的发行记录				
				try {						
					Calendar cal=Calendar.getInstance();
					cal.set(Calendar.YEAR,Integer.parseInt(op_date.substring(0,4)));
					cal.add(Calendar.MONTH, -1);    //得到前一个月 
					SimpleDateFormat sdf = new SimpleDateFormat("yyyyMM");//格式化对象
					fxdf_ym =sdf.format(cal.getTime()); 
				} catch (Exception e) {
					//e.printStackTrace();
					fxdf_ym = op_date.substring(6,8);
				};
			}
			
			String sqlFxData = "select * from yddataben.dbo.MpFxMoney" + op_date.substring(0,4) + " where rtu_id=" + rtu_id + " and mp_id=" + CommBase.CheckString(mapd.get("mp_id")) + " and fxdf_ym=" + fxdf_ym;
			List<Map<String,Object>> listf = j_dao.result(sqlFxData);
			if(listf != null && listf.size() > 0){
				Map<String,Object> mapf = listf.get(0);
				wpdata.fx_jtygbd        =  Double.parseDouble(CommBase.CheckNum(mapf.get("calc_zyz")));		//阶梯发行有功表底    
				wpdata.fx_jtygdl        =  Double.parseDouble(CommBase.CheckNum(mapf.get("jt_total_dl")));	//阶梯累计用电量	
			}
		}catch(Exception e){
			errMsg = "ERR:从数据库查询缴费记录失败";
			return false;
		} finally {
			
		}
		
		printDataStr.append(toPrintDataStr(wpdata));
		
		return true;
	} 

	
	/**低压卡式外接表--取得打印内容（补打发票页面）。增加了购电量，表码差
	 * 查询预付费状态、数据库的用户信息。
	 * 返回一个字符串，各个参数间|分隔。
	 * @param yffDataOperIdx
	 * @param printDataStr
	 * @return
	 * 
	 */
	private boolean getReprintDataDycarddl(String yffDataOperIdx, StringBuffer printDataStr){

		WebPrintData 	wpdata = new WebPrintData(); 
		JDBCDao 		j_dao  = new JDBCDao();
		
		JSONObject json  = JSONObject.fromObject(yffDataOperIdx);
		Integer rtu_id   = json.getInt("rtu_id");
		Short  	sub_id   = (short)json.getInt("sub_id");
		String 	wasteno  = json.getString("wasteno");	//流水号
		String  op_type  = json.getString("op_type");	//操作类型
		String  op_date  = json.getString("op_date");	//操作日期
		String  op_time  = json.getString("op_time");	//购电时间
		byte  reprint   = (byte)CommBase.strtof(json.getString("reprint"));	//补打标志（是不补打发票页）
		while(op_time.length() < 6) op_time = "0" + op_time;
		

		//从数据库查询
		String sql = "select r.id as rtu_id,r.describe as rtu_desc,res.cons_no,res.describe cons_desc,res.phone as tel_no1,res.mobile as tel_no2,o.describe org_desc,o.addr org_addr,o.telno org_telno,mt.meter_id,mt.comm_addr,a.pt_ratio*a.ct_ratio as beilv," +
					 "c.cus_state,b.cacl_type,b.feectrl_type,b.pay_type,b.jt_cycle_md,b.cb_dayhour,b.fee_begindate,b.power_relaf,b.power_rela1,power_rela2,b.feeproj_id,b.yffalarm_id,c.kh_date,c.jt_total_dl,c.total_gdz,c.buy_times,d.ratej_td1,d.ratej_td2,ratej_td3 " +
					 "c.buy_dl, c.pay_bmc " + 
					 "from conspara con,orgpara o,rtupara r,residentpara res,meterpara mt,mppara a,mppay_para b,mppay_state c,yffratepara d " +
					 "where con.app_type=3 and a.rtu_id=b.rtu_id and a.rtu_id=c.rtu_id and a.id=b.mp_id and a.id=c.mp_id " +
					 "and r.id=a.rtu_id and r.cons_id=con.id and con.org_id=o.id and res.rtu_id=r.id and mt.resident_id=res.id and mt.rtu_id=r.id and mt.mp_id=a.id and b.feeproj_id=d.id and " +
					 "a.rtu_id=" + rtu_id + " and a.id=" + sub_id;
		
		String sqlyddataben = "select * from yddataben.dbo.jyff" + op_date.substring(0,4) + " where wasteno='" + wasteno + "'";
		
		try {
		
			List<Map<String,Object>> listp = j_dao.result(sql);
			List<Map<String,Object>> listd = j_dao.result(sqlyddataben);
		
			if(listp == null || listp.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的用户档案.";
				return false;
			}else if(listd == null || listd.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的缴费记录.";
				return false;
			}
		
			//获取一条数据存入map
			Map<String,Object> mapp = listp.get(0);
			Map<String,Object> mapd = listd.get(0);
	
			//给wpdata赋值
			wpdata.org_desc			= CommBase.CheckString(mapp.get("org_desc")); 	//供电所
			wpdata.org_addr			= CommBase.CheckString(mapp.get("org_addr")); //购电地址
			wpdata.org_telno		= CommBase.CheckString(mapp.get("org_telno"));//服务电话
			wpdata.yffman_desc		= CommBase.CheckString(mapd.get("op_man"));//售电操作员
			wpdata.busi_no			= CommBase.CheckString(mapp.get("cons_no"));//客户编号
			wpdata.cons_desc		= CommBase.CheckString(mapp.get("cons_desc"));//客户名称
			wpdata.cus_state_desc 	= Rd.getDict(Dict.DICTITEM_YFFCUSSTATE, mapp.get("cus_state"));//客户状态
			wpdata.rtu_desc			= CommBase.CheckString(mapp.get("rtu_desc"));//集中器描述
			wpdata.tel_no1			= CommBase.CheckString(mapp.get("tel_no1"));//客户固定电话
			wpdata.tel_no2			= CommBase.CheckString(mapp.get("tel_no2"));//客户移动电话
			wpdata.meter_id 		= CommBase.CheckString(mapp.get("meter_id"));//ESAM表号
			wpdata.comm_addr		= CommBase.CheckString(mapp.get("comm_addr"));//电表地址
			wpdata.beilv			= CommBase.CheckString(mapp.get("beilv")); 	//倍率
			
			YffRatePara yffrate 	= (YffRatePara)Rd.getRecord(YDTable.TABLECLASS_YFFRATEPARA, Short.parseShort(CommBase.CheckNum(mapp.get("feeproj_id"))));
			wpdata.fee_type_desc	= Rd.getDict(Dict.DICTITEM_FEELVTYPE, yffrate.getFeeType()); //电价类型(char16)
			wpdata.yffrate_desc  	= getDJLX(yffrate); //电价方案(char64)
			
			YffAlarmPara yffalarm 	= (YffAlarmPara)Rd.getRecord(YDTable.TABLECLASS_YFFALARMPARA, Short.parseShort(CommBase.CheckNum(mapp.get("yffalarm_id"))));
			wpdata.yffalarm_desc 	= yffalarm.getDescribe();//报警方案
			wpdata.cacl_type_desc 	= Rd.getDict(Dict.DICTITEM_FEETYPE, mapp.get("cacl_type")); //计费方式0:无 1:金额计费 2:表底计费
			wpdata.feectrl_type_desc= Rd.getDict(Dict.DICTITEM_PREPAYTYPE, mapp.get("feectrl_type")); //费控方式0:本地费控 1:主站费控
			wpdata.pay_type_desc	= Rd.getDict(Dict.DICTITEM_PAYTYPE, mapp.get("pay_type"));//缴费方式0:卡式 1:远程 2:主站
			wpdata.jt_cycle_md 		=   CommFunc.FormatToMD(mapp.get("jt_cycle_md")); 	//阶梯周期切换日期
			wpdata.reprint_desc		= (reprint == 1 ? "补打" : "");//补打标志
			
			wpdata.paytime			=	CommFunc.FormatToYMD(op_date)+ CommFunc.FormatToHMS(op_time,2);		//缴费日期               			
			wpdata.wasteno          =  	wasteno;	//流水号              
			wpdata.rewasteno        =  	CommBase.CheckString(mapd.get("rewasteno"));	//被冲正流水号        
			wpdata.op_type_desc     =  	Rd.getDict(Dict.DICTITEM_YFFOPTYPE, op_type);	//操作类型            
			wpdata.buy_times        =  	CommBase.strtoi(mapd.get("buy_times").toString());	//购电次数           
			wpdata.buy_dl			=   Double.parseDouble(CommBase.CheckNum(mapp.get("buy_dl")));		//购电量
//			wpdata.pay_bmc			=   Double.parseDouble(CommBase.CheckNum(mapp.get("pay_bmc")));		//表码差
			
			String str_dlgl	= CommBase.CheckNum(mapp.get("power_relaf"));	//动力关联
			int main_mp 	= CommBase.strtoi(str_dlgl);
			
			int mp1 = 0, mp2 = 0;
			if(main_mp > 0) {	//有动力关联
				mp1 = CommBase.strtoi(CommBase.CheckNum(mapp.get("power_rela1")));
				mp2 = CommBase.strtoi(CommBase.CheckNum(mapp.get("power_rela2")));
			}
			String calc_zyz = "";
			if(main_mp <= 0){
				calc_zyz = CommBase.CheckString(mapd.get("calc_zyz"));
		    }
			if(mp1 > 0){
		    	calc_zyz += "-" + CommBase.CheckString(mapd.get("calc1_zyz"));
		    }
			if(mp2 > 0){
		    	calc_zyz += "-" + CommBase.CheckString(mapd.get("calc2_zyz"));
		    }
			
			wpdata.bef_ygbd         =  	calc_zyz;	//缴费前有功表底      
			
			Double aft_money = Double.parseDouble(CommBase.CheckNum(mapd.get("now_remain")));
			Double all_money = Double.parseDouble(CommBase.CheckNum(mapd.get("all_money")));			
			wpdata.bef_remain       =  	aft_money - all_money ;	//缴费前剩余金额 =缴费后剩余金额-本次缴费总金额     
			wpdata.pay_money        =  	Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money")));	//缴费金额(元)        
			wpdata.pay_money_desc   =  	MoneyNum2Char.convertChar(Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money"))));	//缴费金额大写字符串  
			wpdata.othjs_money      =  	Double.parseDouble(CommBase.CheckNum(mapd.get("othjs_money")));//结算金额(元)        
			wpdata.zb_money         =  	Double.parseDouble(CommBase.CheckNum(mapd.get("zb_money")));	//追补金额(元)        
			wpdata.all_money        =  	all_money;	//缴费总金额(元)      
			wpdata.all_money_desc   =  	MoneyNum2Char.convertChar(all_money);	//缴费总金额大写字符串
	
			wpdata.buy_dl			=   Double.parseDouble(CommBase.CheckNum(mapd.get("buy_dl")));		//购电量
			wpdata.pay_bmc			=   Double.parseDouble(CommBase.CheckNum(mapd.get("pay_bmc")));		//表码差
			
			wpdata.alarm_money1     =  	Double.parseDouble(CommBase.CheckNum(mapd.get("alarm1")));	//报警金额1(元)       
			wpdata.alarm_money2     =  	Double.parseDouble(CommBase.CheckNum(mapd.get("alarm2")));	//报警金额2(元)       
			wpdata.aft_money        =  	aft_money;	//缴费后剩余金额(元)  
			wpdata.aft_money        =  	Double.parseDouble(CommBase.CheckNum(mapd.get("now_remain2")));//缴费后剩余金额2(元)  
			wpdata.total_pay_money	=  	Double.parseDouble(CommBase.CheckNum(mapd.get("total_gdz")));	//累计缴费金额(元)    
			
			//根据阶梯累计用电量计算1-4档阶梯用电量
			Double jt_total_dl = Double.parseDouble(CommBase.CheckNum(mapd.get("jt_total_dl")));//阶梯累计用电量
			int fee_begindate= Integer.parseInt(CommBase.CheckNum(mapp.get("fee_begindate")));//费率启用日期YYYYMMDD
			int kh_date= Integer.parseInt(CommBase.CheckNum(mapp.get("kh_date")));//开户日期YYYYMMDD
			int flag_date = kh_date > fee_begindate ? kh_date : fee_begindate;//取开户日期和费率启用日期中较晚的作为阶梯开始时间
			
			if(flag_date>0 && (yffrate.getFeeType() == SDDef.YFF_FEETYPE_JTFL || yffrate.getFeeType() == SDDef.YFF_FEETYPE_MIXJT)){//阶梯或者混合阶梯
				Double max1=0.0,max2=0.0,max3=0.0;//各档电量最大值。
				Double td1 = (yffrate.getRatejTd1() == null ? 0 : yffrate.getRatejTd1());
				Double td2 = (yffrate.getRatejTd2() == null ? 0 : yffrate.getRatejTd2());
				Double td3 = (yffrate.getRatejTd3() == null ? 0 : yffrate.getRatejTd3());
				
				if(yffrate.getRatejType() == SDDef.YFF_RATETYPE_MON){//月度方案
					max1 = td1;
					max2 = max1 + td2;
					max3 = max2 + td3;
				}else if(yffrate.getRatejType() == SDDef.YFF_RATETYPE_YEAR){//年度方案
					int op_date_int = Integer.parseInt(op_date)/10000;
					int jtyear = flag_date/10000;					
					if(jtyear < op_date_int){//去年已开户，启用了阶梯费率。						
						max1 = td1 * 12 ;
						max2 = max1 + td2 * 12;
						max3 = max2 + td3 * 12;
					}else{//启用阶梯费率不足一年。各档阶梯量 =实际月份*每月各档电量
						int monnum = 13 - (flag_date % 10000) / 100; // 12个月-当前月份 + 1
						max1 = td1 * monnum ;
						max2 = max1 + td2 * monnum;
						max3 = max2 + td3 * monnum;
					}				
				}
				
				if(jt_total_dl < max1){
					wpdata.jt_use_dl1 = jt_total_dl;//第一档以内
				}else if(jt_total_dl < max2 || yffrate.getRatejNum() == 2){ //不高过二档或者只分两个档
					wpdata.jt_use_dl1 = td1;
					wpdata.jt_use_dl2 = jt_total_dl - max1;
				}else if(jt_total_dl < max3 || yffrate.getRatejNum() == 3){ //不高过三档或者只分三个档
					wpdata.jt_use_dl1 = td1;
					wpdata.jt_use_dl2 = td2;
					wpdata.jt_use_dl3 = jt_total_dl - max2;
				}else if(jt_total_dl > max3){ //
					wpdata.jt_use_dl1 = td1;	//阶梯一档用电量
					wpdata.jt_use_dl2 = td2;	//阶梯二档用电量
					wpdata.jt_use_dl3 = td3;	//阶梯三档用电量
					wpdata.jt_use_dl4 = jt_total_dl - max3;   	//阶梯四档用电量
				}				
			} 
			
			//发行电费相关信息
			String cb_dayhour  = CommBase.CheckNum(mapp.get("cb_dayhour"));//抄表日DDHH
			String fxdf_ym = op_date.substring(6,8) + op_time.substring(0,2);
			if(Integer.parseInt(cb_dayhour) < Integer.parseInt(fxdf_ym)) //本月已抄表
				fxdf_ym =  op_date.substring(0,6);
			else {	//本月未抄表,取上个月的发行记录				
				try {						
					Calendar cal=Calendar.getInstance();
					cal.set(Calendar.YEAR,Integer.parseInt(op_date.substring(0,4)));
					cal.add(Calendar.MONTH, -1);    //得到前一个月 
					SimpleDateFormat sdf = new SimpleDateFormat("yyyyMM");//格式化对象
					fxdf_ym =sdf.format(cal.getTime()); 
				} catch (Exception e) {
					//e.printStackTrace();
					fxdf_ym = op_date.substring(6,8);
				};
			}
			
			String sqlFxData = "select * from yddataben.dbo.MpFxMoney" + op_date.substring(0,4) + " where rtu_id=" + rtu_id + " and mp_id=" + CommBase.CheckString(mapd.get("mp_id")) + " and fxdf_ym=" + fxdf_ym;
			List<Map<String,Object>> listf = j_dao.result(sqlFxData);
			if(listf != null && listf.size() > 0){
				Map<String,Object> mapf = listf.get(0);
				wpdata.fx_jtygbd        =  Double.parseDouble(CommBase.CheckNum(mapf.get("calc_zyz")));		//阶梯发行有功表底    
				wpdata.fx_jtygdl        =  Double.parseDouble(CommBase.CheckNum(mapf.get("jt_total_dl")));	//阶梯累计用电量	
			}
		}catch(Exception e){
			errMsg = "ERR:从数据库查询缴费记录失败";
			return false;
		} finally {
			
		}
		
		printDataStr.append(toPrintDataStr(wpdata));
		
		return true;
	} 
	
	
	
	/**高压主站--取得打印内容（补打发票页面）
	 * 查询预付费状态、数据库的用户信息。
	 * 返回一个字符串，各个参数间|分隔。
	 * @param yffDataOperIdx
	 * @param printDataStr
	 * @return
	 */
	private boolean getReprintDataGyMaster(String yffDataOperIdx, StringBuffer printDataStr){
		WebPrintData wpdata = new WebPrintData();
		
		JSONObject json  = JSONObject.fromObject(yffDataOperIdx);
		
		Integer rtu_id   = json.getInt("rtu_id");
		Short  	sub_id   = (short)json.getInt("sub_id");
		String 	wasteno  = json.getString("wasteno");	//流水号
		String  op_type  = json.getString("op_type");	//操作类型
		String  op_date  = json.getString("op_date");	//操作日期
		String  op_time  = json.getString("op_time");	//购电时间
		
		while(op_time.length() < 6) op_time = "0" + op_time;
		
		byte  reprint   = (byte)CommBase.strtof(json.getString("reprint"));	//补打标志
		
		JDBCDao 	j_dao = new JDBCDao();
		ResultSet 	rs 	  = null;
		
		String sql ="select o.describe as org_desc,ln.describe as line_desc,o.addr as org_addr, o.telno as org_telno,c.busi_no as cons_no," +
					"c.describe as cons_desc,c.trade1,zs.cus_state,c.cont_cap,c.tel_no1,c.tel_no2,z.clp_num,z.clp_ids,zs.*," +
					"zp.feeproj_id,zp.yffalarm_id,zp.cacl_type,zp.feectrl_type,zp.pay_type,cs.describe as cs_stand_desc " +
					"from conspara c,orgpara o,substation s ,rtupara r, zjgpay_para zp,zjgpay_state zs, zjgpara z,linepara ln,cs_stand cs " +  
					"where c.org_id = o.id and c.subst_id=ln.subs_id and c.line_id = ln.id and c.subst_id=s.id and c.id=r.cons_id and zp.cs_stand=cs.id " +
					"and zp.rtu_id = r.id and z.rtu_id = r.id and z.zjg_id = z.zjg_id and zs.rtu_id = r.id and zs.zjg_id = zp.zjg_id " + 
					"and z.rtu_id = " + rtu_id + " and z.zjg_id=" + sub_id;
		String sqlyddataben = "select * from yddataben.dbo.zyff" + op_date.substring(0,4) + " where wasteno='" + wasteno + "'";
		
		try {
			List<Map<String,Object>> listp = j_dao.result(sql);
			List<Map<String,Object>> listd = j_dao.result(sqlyddataben);
			
			if(listp == null || listp.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的用户档案.";
				return false;
			}else if(listd == null || listd.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的缴费记录.";
				return false;
			}
			
			//获取一条数据存入map
			Map<String,Object> mapp = listp.get(0);
			Map<String,Object> mapd = listd.get(0);
			
			//给wpdata赋值
			wpdata.org_desc			= CommBase.CheckString(mapp.get("org_desc")); 	//供电所
			wpdata.line_desc		= CommBase.CheckString(mapp.get("line_desc")); 	//变电站线路
			wpdata.org_addr			= CommBase.CheckString(mapp.get("org_addr")); 	//购电地址
			wpdata.org_telno		= CommBase.CheckString(mapp.get("org_telno"));	//服务电话
			wpdata.yffman_desc		= CommBase.CheckString(mapd.get("op_man"));		//售电操作员
			wpdata.busi_no			= CommBase.CheckString(mapp.get("cons_no"));	//客户编号
			wpdata.cons_desc		= CommBase.CheckString(mapp.get("cons_desc"));	//客户名称
			wpdata.trade1_desc		= Rd.getDict(Dict.DICTITEM_TRADE,CommBase.CheckNum(mapp.get("trade1")));//客户分类
			wpdata.cus_state_desc 	= Rd.getDict(Dict.DICTITEM_YFFCUSSTATE, mapp.get("cus_state"));//客户状态
			wpdata.cont_cap			= CommBase.CheckString(mapp.get("cont_cap"));//变压器容量
			wpdata.tel_no1			= CommBase.CheckString(mapp.get("tel_no1"));//客户固定电话
			wpdata.tel_no2			= CommBase.CheckString(mapp.get("tel_no2"));//客户移动电话
			
			String str_clp_num  = CommBase.CheckNum(mapp.get("clp_num"));
			int    clp_num 		= CommBase.strtoi(str_clp_num);
			String clp_ids 		= CommBase.CheckString(mapp.get("clp_ids"));
			int mp_id = findFirstMpId(clp_ids);
			
			String sqlmp = "select mp.pt_ratio*mp.ct_ratio as beilv,mt.meter_id,mt.comm_addr from mppara mp,meterpara mt where mp.rtu_id=" + rtu_id + " and mp.id=" + mp_id + " and mp.rtu_id=mt.rtu_id and mp.id=mt.mp_id";
			List<Map<String,Object>> listmp = j_dao.result(sqlmp);
			
			if(listmp != null && listmp.size()> 0){
				Map<String,Object> mapmp = listmp.get(0);				
				wpdata.meter_id 		= CommBase.CheckString(mapmp.get("meter_id"));//ESAM表号
				wpdata.comm_addr		= CommBase.CheckString(mapmp.get("comm_addr"));//电表地址
				wpdata.beilv			= CommBase.CheckString(mapmp.get("beilv")); 	//倍率
			}
		
			YffRatePara yffrate 	= (YffRatePara)Rd.getRecord(YDTable.TABLECLASS_YFFRATEPARA, Short.parseShort(CommBase.CheckNum(mapp.get("feeproj_id"))));
			wpdata.fee_type_desc	= Rd.getDict(Dict.DICTITEM_FEELVTYPE, yffrate.getFeeType()); //电价类型(char16)
			wpdata.yffrate_desc  	= getDJLX(yffrate); //电价方案(char64)
		
			YffAlarmPara yffalarm 	= (YffAlarmPara)Rd.getRecord(YDTable.TABLECLASS_YFFALARMPARA, Short.parseShort(CommBase.CheckNum(mapp.get("yffalarm_id"))));
			wpdata.yffalarm_desc 	= yffalarm.getDescribe();//报警方案
			wpdata.cs_stand_desc	=  CommBase.CheckString(mapp.get("cs_stand_desc"));;//力调方案描述
			wpdata.cacl_type_desc 	= Rd.getDict(Dict.DICTITEM_FEETYPE, mapp.get("cacl_type")); //计费方式0:无 1:金额计费 2:表底计费
			wpdata.feectrl_type_desc= Rd.getDict(Dict.DICTITEM_PREPAYTYPE, mapp.get("feectrl_type")); //费控方式0:本地费控 1:主站费控
			wpdata.pay_type_desc	= Rd.getDict(Dict.DICTITEM_PAYTYPE, mapp.get("pay_type"));//缴费方式0:卡式 1:远程 2:主站
		
			
			wpdata.reprint_desc		= 	(reprint == 1 ? "补打" : "" );//补打标志
			wpdata.paytime			=	CommFunc.FormatToYMD(op_date)+ CommFunc.FormatToHMS(op_time,2);		//缴费日期               			
			wpdata.wasteno          =  	wasteno;	//流水号              
			wpdata.rewasteno        =  	CommBase.CheckString(mapd.get("rewasteno"));	//被冲正流水号        
			wpdata.op_type_desc     =  	Rd.getDict(Dict.DICTITEM_YFFOPTYPE, op_type);	//操作类型            
			wpdata.buy_times        =  	CommBase.strtoi(mapd.get("buy_times").toString());	//购电次数            
		
			if(clp_num==1){
				wpdata.bef_jsygbd 	= CommBase.CheckString(mapd.get("jsbd_zyz"));//结算有功表底
				wpdata.bef_jswgbd 	= CommBase.CheckString(mapd.get("jsbd_zwz"));//结算无功表底
				wpdata.bef_ygbd		= CommBase.CheckString(mapd.get("calc_zyz"));//缴费前有功表底
				wpdata.bef_wgbd		= CommBase.CheckString(mapd.get("calc_zwz"));//缴费前无功表底
			}else if(clp_num==2){
				wpdata.bef_jsygbd 	= "一:" + CommBase.CheckString(mapd.get("jsbd_zyz")) + ",二:" + CommBase.CheckString(mapd.get("jsbd1_zyz"));
				wpdata.bef_jswgbd 	= "一:" + CommBase.CheckString(mapd.get("jsbd_zwz")) + ",二:" + CommBase.CheckString(mapd.get("jsbd1_zwz"));
				wpdata.bef_ygbd		= "一:" + CommBase.CheckString(mapd.get("calc_zyz")) + ",二:" + CommBase.CheckString(mapd.get("calc1_zyz"));
				wpdata.bef_wgbd		= "一:" + CommBase.CheckString(mapd.get("calc_zwz")) + ",二:" + CommBase.CheckString(mapd.get("calc1_zwz"));
			}else if(clp_num==3){
				wpdata.bef_jsygbd 	= "一:" + CommBase.CheckString(mapd.get("jsbd_zyz")) + ",二:" + CommBase.CheckString(mapd.get("jsbd1_zyz")) + ",三:" + CommBase.CheckString(mapd.get("jsbd2_zyz"));
				wpdata.bef_jswgbd 	= "一:" + CommBase.CheckString(mapd.get("jsbd_zwz")) + ",二:" + CommBase.CheckString(mapd.get("jsbd1_zwz")) + ",三:" + CommBase.CheckString(mapd.get("jsbd2_zwz")) ;
				wpdata.bef_ygbd		= "一:" + CommBase.CheckString(mapd.get("calc_zyz")) + ",二:" + CommBase.CheckString(mapd.get("calc1_zyz")) + ",三:" + CommBase.CheckString(mapd.get("calc2_zyz"));
				wpdata.bef_wgbd		= "一:" + CommBase.CheckString(mapd.get("calc_zwz")) + ",二:" + CommBase.CheckString(mapd.get("calc1_zwz")) + ",三:" + CommBase.CheckString(mapd.get("calc2_zwz"));
			}
			
			Double aft_money = Double.parseDouble(CommBase.CheckNum(mapd.get("now_remain")));
			Double all_money = Double.parseDouble(CommBase.CheckNum(mapd.get("all_money")));			
			wpdata.bef_remain       = aft_money - all_money;//缴费前剩余金额 =缴费后剩余金额-本次缴费总金额     
			wpdata.pay_money        = Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money")));//缴费金额(元)
			wpdata.pay_money_desc   = MoneyNum2Char.convertChar(Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money"))));//缴费金额大写字符串
			wpdata.othjs_money      = Double.parseDouble(CommBase.CheckNum(mapd.get("othjs_money"))); //结算金额(元)
			wpdata.zb_money         = Double.parseDouble(CommBase.CheckNum(mapd.get("zb_money")));    //追补金额(元)
			wpdata.all_money        = all_money;//缴费总金额(元)
			wpdata.all_money_desc   = MoneyNum2Char.convertChar(all_money);//缴费总金额大写字符串
			wpdata.alarm_money1     = Double.parseDouble(CommBase.CheckNum(mapd.get("alarm1")));//报警金额1(元)
			wpdata.alarm_money2     = Double.parseDouble(CommBase.CheckNum(mapd.get("alarm2")));//报警金额2(元)
			wpdata.aft_money        = aft_money        ;//缴费后剩余金额(元)
			wpdata.total_pay_money  = Double.parseDouble(CommBase.CheckNum(mapd.get("total_gdz")));//累计缴费金额(元)
			
			//发行电费相关信息
			String cb_dayhour  = CommBase.CheckNum(mapp.get("cb_dayhour"));//抄表日DDHH
			String fxdf_ym = op_date.substring(6,8) + op_time.substring(0,2);
			if(Integer.parseInt(cb_dayhour) < Integer.parseInt(fxdf_ym)) //本月已抄表
				fxdf_ym =  op_date.substring(0,6);
			else {	//本月未抄表,取上个月的发行记录				
				try {						
					Calendar cal=Calendar.getInstance();
					cal.set(Calendar.YEAR,Integer.parseInt(op_date.substring(0,4)));
					cal.add(Calendar.MONTH, -1);    //得到前一个月 
					SimpleDateFormat sdf = new SimpleDateFormat("yyyyMM");//格式化对象
					fxdf_ym =sdf.format(cal.getTime()); 
				} catch (Exception e) {
					//e.printStackTrace();
					fxdf_ym = op_date.substring(6,8);
				};
			}
			
			String sqlFxData = "select * from yddataben.dbo.ZjgFxMoney" + op_date.substring(0,4) + " where rtu_id=" + rtu_id + " and mp_id=" + CommBase.CheckString(mapd.get("mp_id")) + " and fxdf_ym=" + fxdf_ym;
			List<Map<String,Object>> listf = j_dao.result(sqlFxData);
			if(listf != null && listf.size() > 0){
				Map<String,Object> mapf = listf.get(0);
				wpdata.fx_mdhmi         = CommFunc.FormatToMDHMin(mapf.get("fxdf_mdhmi"));		//发行电费日期
				wpdata.fx_ele_money     = Double.parseDouble(CommBase.CheckNum(mapf.get("ele_money")));	    //发行电度电费(元)
				wpdata.fx_jbf_money     = Double.parseDouble(CommBase.CheckNum(mapf.get("jbf_money")));	    //发行基本电费(元)
				wpdata.fx_powrate_money = Double.parseDouble(CommBase.CheckNum(mapf.get("powrate_money")));	//发行力调电费(元)
				wpdata.fx_other_money   = Double.parseDouble(CommBase.CheckNum(mapf.get("other_money")));	//发行其他电费(元)
				wpdata.fx_all_money     = wpdata.fx_ele_money +	wpdata.fx_jbf_money + wpdata.fx_powrate_money + wpdata.fx_other_money;//发行总电费(元)
				wpdata.fx_ygbd          = Double.parseDouble(CommBase.CheckNum(mapf.get("calc_zyz")));	    //发行有功表底
				wpdata.fx_wgbd          = Double.parseDouble(CommBase.CheckNum(mapf.get("calc_zwz")));	    //发行无功表底
				wpdata.fx_ygdl          = Double.parseDouble(CommBase.CheckNum(mapf.get("total_ydl")));	    //发行有功电量
				wpdata.fx_wgdl          = Double.parseDouble(CommBase.CheckNum(mapf.get("total_wdl")));	    //发行无功电量
			}
		
		}catch(Exception e){
			errMsg = "ERR:从数据库查询用户信息失败";
			return false;
		}finally {	
			j_dao.closeRs(rs);
		}
		printDataStr.append(toPrintDataStr(wpdata));
		
		return true;
	}

	/**高压远程表底--取得打印内容（补打发票页面）
	 * 查询预付费状态、数据库的用户信息。
	 * 返回一个字符串，各个参数间|分隔。
	 * @param yffDataOperIdx
	 * @param printDataStr
	 * @return
	 */
	private boolean getReprintDataGyRemoteBD(String yffDataOperIdx, StringBuffer printDataStr){
		WebPrintData wpdata = new WebPrintData();
		
		JSONObject json  = JSONObject.fromObject(yffDataOperIdx);
		
		Integer rtu_id   = json.getInt("rtu_id");
		Short  	sub_id   = (short)json.getInt("sub_id");
		String 	wasteno  = json.getString("wasteno");	//流水号
		String  op_type  = json.getString("op_type");	//操作类型
		String  op_date  = json.getString("op_date");	//操作日期
		String  op_time  = json.getString("op_time");	//购电时间
		
		while(op_time.length() < 6) op_time = "0" + op_time;
		
		byte  reprint   = (byte)CommBase.strtof(json.getString("reprint"));	//补打标志
		
		JDBCDao 	j_dao = new JDBCDao();
		ResultSet 	rs 	  = null;
		
		String sql ="select o.describe as org_desc,ln.describe as line_desc,o.addr as org_addr, o.telno as org_telno,c.busi_no as cons_no," +
					"c.describe as cons_desc,c.trade1,c.cont_cap,c.tel_no1,c.tel_no2,z.clp_num,z.clp_ids,zs.*,zp.writecard_no," +
					"zp.feeproj_id,zp.yffalarm_id,zp.cacl_type,zp.feectrl_type,zp.pay_type,cs.describe as cs_stand_desc " +
					"from conspara c,orgpara o,substation s ,rtupara r, zjgpay_para zp,zjgpay_state zs, zjgpara z,linepara ln,cs_stand cs " +  
					"where c.org_id = o.id and c.subst_id=ln.subs_id and c.line_id = ln.id and c.subst_id=s.id and c.id=r.cons_id and zp.cs_stand=cs.id " +
					"and zp.rtu_id = r.id and z.rtu_id = r.id and z.zjg_id = z.zjg_id and zs.rtu_id = r.id and zs.zjg_id = zp.zjg_id " + 
					"and z.rtu_id = " + rtu_id + " and z.zjg_id=" + sub_id;
		String sqlyddataben = "select * from yddataben.dbo.zyff" + op_date.substring(0,4) + " where wasteno='" + wasteno + "'";
		
		try {
			List<Map<String,Object>> listp = j_dao.result(sql);
			List<Map<String,Object>> listd = j_dao.result(sqlyddataben);
			
			if(listp == null || listp.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的用户档案.";
				return false;
			}else if(listd == null || listd.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的缴费记录.";
				return false;
			}
			
			//获取一条数据存入map
			Map<String,Object> mapp = listp.get(0);
			Map<String,Object> mapd = listd.get(0);
			
			//给wpdata赋值
			wpdata.org_desc			= CommBase.CheckString(mapp.get("org_desc")); 	//供电所
			wpdata.line_desc		= CommBase.CheckString(mapp.get("line_desc")); 	//变电站线路
			wpdata.org_addr			= CommBase.CheckString(mapp.get("org_addr")); 	//购电地址
			wpdata.org_telno		= CommBase.CheckString(mapp.get("org_telno"));	//服务电话
			wpdata.yffman_desc		= CommBase.CheckString(mapd.get("op_man"));		//售电操作员
			wpdata.busi_no			= CommBase.CheckString(mapp.get("cons_no"));	//客户编号
			wpdata.cons_desc		= CommBase.CheckString(mapp.get("cons_desc"));	//客户名称
			wpdata.trade1_desc		= Rd.getDict(Dict.DICTITEM_TRADE,CommBase.CheckNum(mapp.get("trade1")));//客户分类
			wpdata.cus_state_desc 	= Rd.getDict(Dict.DICTITEM_YFFCUSSTATE, mapp.get("cus_state"));//客户状态
			wpdata.cont_cap			= CommBase.CheckString(mapp.get("cont_cap"));//变压器容量
			wpdata.tel_no1			= CommBase.CheckString(mapp.get("tel_no1"));//客户固定电话
			wpdata.tel_no2			= CommBase.CheckString(mapp.get("tel_no2"));//客户移动电话
			wpdata.writecard_no		= CommBase.CheckString(mapp.get("writecard_no"));//写卡户号
			
			
			String str_clp_num  = CommBase.CheckNum(mapp.get("clp_num"));
			int    clp_num 		= CommBase.strtoi(str_clp_num);
			String clp_ids 		= CommBase.CheckString(mapp.get("clp_ids"));
			int mp_id = findFirstMpId(clp_ids);
			
			String sqlmp = "select mp.pt_ratio*mp.ct_ratio as beilv,mt.meter_id,mt.comm_addr from mppara mp,meterpara mt where mp.rtu_id=" + rtu_id + " and mp.id=" + mp_id + " and mp.rtu_id=mt.rtu_id and mp.id=mt.mp_id";
			List<Map<String,Object>> listmp = j_dao.result(sqlmp);
			
			if(listmp != null && listmp.size()> 0){
				Map<String,Object> mapmp = listmp.get(0);				
				wpdata.meter_id 		= CommBase.CheckString(mapmp.get("meter_id"));//ESAM表号
				wpdata.comm_addr		= CommBase.CheckString(mapmp.get("comm_addr"));//电表地址
				wpdata.beilv			= CommBase.CheckString(mapmp.get("beilv")); 	//倍率
			}
		
			YffRatePara yffrate 	= (YffRatePara)Rd.getRecord(YDTable.TABLECLASS_YFFRATEPARA, Short.parseShort(CommBase.CheckNum(mapp.get("feeproj_id"))));
			wpdata.fee_type_desc	= Rd.getDict(Dict.DICTITEM_FEELVTYPE, yffrate.getFeeType()); //电价类型(char16)
			wpdata.yffrate_desc  	= getDJLX(yffrate); //电价方案(char64)
		
			YffAlarmPara yffalarm 	= (YffAlarmPara)Rd.getRecord(YDTable.TABLECLASS_YFFALARMPARA, Short.parseShort(CommBase.CheckNum(mapp.get("yffalarm_id"))));
			wpdata.yffalarm_desc 	= yffalarm.getDescribe();//报警方案
			wpdata.cs_stand_desc	=  CommBase.CheckString(mapp.get("cs_stand_desc"));;//力调方案描述
			wpdata.cacl_type_desc 	= Rd.getDict(Dict.DICTITEM_FEETYPE, mapp.get("cacl_type")); //计费方式0:无 1:金额计费 2:表底计费
			wpdata.feectrl_type_desc= Rd.getDict(Dict.DICTITEM_PREPAYTYPE, mapp.get("feectrl_type")); //费控方式0:本地费控 1:主站费控
			wpdata.pay_type_desc	= Rd.getDict(Dict.DICTITEM_PAYTYPE, mapp.get("pay_type"));//缴费方式0:卡式 1:远程 2:主站
		
			
			wpdata.reprint_desc		= 	(reprint == 1 ? "补打" : "" );//补打标志
			wpdata.paytime			=	CommFunc.FormatToYMD(op_date)+ CommFunc.FormatToHMS(op_time,2);		//缴费日期               			
			wpdata.wasteno          =  	wasteno;	//流水号              
			wpdata.rewasteno        =  	CommBase.CheckString(mapd.get("rewasteno"));	//被冲正流水号        
			wpdata.op_type_desc     =  	Rd.getDict(Dict.DICTITEM_YFFOPTYPE, op_type);	//操作类型            
			wpdata.buy_times        =  	CommBase.strtoi(mapd.get("buy_times").toString());	//购电次数            
		
			if(clp_num==1){
				wpdata.bef_ygbd		= CommBase.CheckString(mapd.get("calc_zyz"));//缴费前有功表底
			}else if(clp_num==2){
				wpdata.bef_ygbd		= "一:" + CommBase.CheckString(mapd.get("calc_zyz")) + ",二:" + CommBase.CheckString(mapd.get("calc1_zyz"));
			}else if(clp_num==3){
				wpdata.bef_ygbd		= "一:" + CommBase.CheckString(mapd.get("calc_zyz")) + ",二:" + CommBase.CheckString(mapd.get("calc1_zyz")) + ",三:" + CommBase.CheckString(mapd.get("calc2_zyz"));
			}
			
			Double shutdown_val = Double.parseDouble(CommBase.CheckNum(mapd.get("shutdown_val")));//断电止码
			Double pay_bmc 		= Double.parseDouble(CommBase.CheckNum(mapd.get("pay_bmc")));//表码差
			Double aft_money 	= (shutdown_val- Double.parseDouble(CommBase.CheckNum(mapd.get("calc_zyz")))) * Double.parseDouble(wpdata.beilv) * yffrate.getRatedZ();//缴费后剩余金额(元)=（shutdown_val-calc）* ptct*电价
			Double all_money 	= Double.parseDouble(CommBase.CheckNum(mapd.get("all_money")));//缴费总金额(元)
			
			wpdata.bef_remain       = aft_money - all_money  ;//缴费前剩余金额 =缴费后剩余金额-本次缴费总金额
			wpdata.bef_shutdown_val = shutdown_val - pay_bmc;//缴费前断电止码 =断电止码-表码差
			wpdata.pay_money        = Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money")));//缴费金额(元)
			wpdata.pay_money_desc   = MoneyNum2Char.convertChar(Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money"))));//缴费金额大写字符串
			wpdata.othjs_money      = Double.parseDouble(CommBase.CheckNum(mapd.get("othjs_money"))); //结算金额(元)
			wpdata.zb_money         = Double.parseDouble(CommBase.CheckNum(mapd.get("zb_money")));    //追补金额(元)
			wpdata.all_money        = all_money;//缴费总金额(元)
			wpdata.all_money_desc   = MoneyNum2Char.convertChar(all_money);//缴费总金额大写字符串
			wpdata.alarm_code		= Double.parseDouble(CommBase.CheckNum(mapd.get("alarm1")));//报警表底
			wpdata.buy_dl			= Double.parseDouble(CommBase.CheckNum(mapd.get("buy_dl")));//购电量	
			wpdata.pay_bmc			= pay_bmc;//表码差	
			wpdata.shutdown_val		= shutdown_val;//断电止码	
			wpdata.aft_money        = aft_money;//缴费后剩余金额(元)
			wpdata.total_pay_money  = Double.parseDouble(CommBase.CheckNum(mapd.get("total_gdz")));//累计缴费金额(元)
		
		}catch(Exception e){
			errMsg = "ERR:从数据库查询用户信息失败";
			return false;
		}finally {	
			j_dao.closeRs(rs);
		}
		printDataStr.append(toPrintDataStr(wpdata));
		
		return true;
	}

	/**高压卡式表底--取得打印内容（补打发票页面）
	 * 查询预付费状态、数据库的用户信息。
	 * 返回一个字符串，各个参数间|分隔。
	 * @param yffDataOperIdx
	 * @param printDataStr
	 * @return
	 */
	private boolean getReprintDataGy6103(String yffDataOperIdx, StringBuffer printDataStr){
		WebPrintData wpdata = new WebPrintData();
		
		JSONObject json  = JSONObject.fromObject(yffDataOperIdx);
		
		Integer rtu_id   = json.getInt("rtu_id");
		Short  	sub_id   = (short)json.getInt("sub_id");
		String 	wasteno  = json.getString("wasteno");	//流水号
		String  op_type  = json.getString("op_type");	//操作类型
		String  op_date  = json.getString("op_date");	//操作日期
		String  op_time  = json.getString("op_time");	//购电时间
		
		while(op_time.length() < 6) op_time = "0" + op_time;
		
		byte  reprint   = (byte)CommBase.strtof(json.getString("reprint"));	//补打标志
		
		JDBCDao 	j_dao = new JDBCDao();
		ResultSet 	rs 	  = null;
		
		String sql ="select o.describe as org_desc,ln.describe as line_desc,o.addr as org_addr, o.telno as org_telno,c.busi_no as cons_no," +
					"c.describe as cons_desc,c.trade1,c.cont_cap,c.tel_no1,c.tel_no2,z.clp_num,z.clp_ids,zs.*,zp.writecard_no," +
					"zp.feeproj_id,zp.yffalarm_id,zp.cacl_type,zp.feectrl_type,zp.pay_type,cs.describe as cs_stand_desc " +
					"from conspara c,orgpara o,substation s ,rtupara r, zjgpay_para zp,zjgpay_state zs, zjgpara z,linepara ln,cs_stand cs " +  
					"where c.org_id = o.id and c.subst_id=ln.subs_id and c.line_id = ln.id and c.subst_id=s.id and c.id=r.cons_id and zp.cs_stand=cs.id " +
					"and zp.rtu_id = r.id and z.rtu_id = r.id and z.zjg_id = z.zjg_id and zs.rtu_id = r.id and zs.zjg_id = zp.zjg_id " + 
					"and z.rtu_id = " + rtu_id + " and z.zjg_id=" + sub_id;
		String sqlyddataben = "select * from yddataben.dbo.zyff" + op_date.substring(0,4) + " where wasteno='" + wasteno + "'";
		
		try {
			List<Map<String,Object>> listp = j_dao.result(sql);
			List<Map<String,Object>> listd = j_dao.result(sqlyddataben);
			
			if(listp == null || listp.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的用户档案.";
				return false;
			}else if(listd == null || listd.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的缴费记录.";
				return false;
			}
			
			//获取一条数据存入map
			Map<String,Object> mapp = listp.get(0);
			Map<String,Object> mapd = listd.get(0);
			
			//给wpdata赋值
			wpdata.org_desc			= CommBase.CheckString(mapp.get("org_desc")); 	//供电所
			wpdata.line_desc		= CommBase.CheckString(mapp.get("line_desc")); 	//变电站线路
			wpdata.org_addr			= CommBase.CheckString(mapp.get("org_addr")); 	//购电地址
			wpdata.org_telno		= CommBase.CheckString(mapp.get("org_telno"));	//服务电话
			wpdata.yffman_desc		= CommBase.CheckString(mapd.get("op_man"));		//售电操作员
			wpdata.busi_no			= CommBase.CheckString(mapp.get("cons_no"));	//客户编号
			wpdata.cons_desc		= CommBase.CheckString(mapp.get("cons_desc"));	//客户名称
			wpdata.trade1_desc		= Rd.getDict(Dict.DICTITEM_TRADE,CommBase.CheckNum(mapp.get("trade1")));//客户分类
			wpdata.cus_state_desc 	= Rd.getDict(Dict.DICTITEM_YFFCUSSTATE, mapp.get("cus_state"));//客户状态
			wpdata.cont_cap			= CommBase.CheckString(mapp.get("cont_cap"));//变压器容量
			wpdata.tel_no1			= CommBase.CheckString(mapp.get("tel_no1"));//客户固定电话
			wpdata.tel_no2			= CommBase.CheckString(mapp.get("tel_no2"));//客户移动电话
			wpdata.writecard_no		= CommBase.CheckString(mapp.get("writecard_no"));//写卡户号
			
			
			String str_clp_num  = CommBase.CheckNum(mapp.get("clp_num"));
			int    clp_num 		= CommBase.strtoi(str_clp_num);
			String clp_ids 		= CommBase.CheckString(mapp.get("clp_ids"));
			int mp_id = findFirstMpId(clp_ids);
			
			String sqlmp = "select mp.pt_ratio*mp.ct_ratio as beilv,mt.meter_id,mt.comm_addr from mppara mp,meterpara mt where mp.rtu_id=" + rtu_id + " and mp.id=" + mp_id + " and mp.rtu_id=mt.rtu_id and mp.id=mt.mp_id";
			List<Map<String,Object>> listmp = j_dao.result(sqlmp);
			
			if(listmp != null && listmp.size()> 0){
				Map<String,Object> mapmp = listmp.get(0);				
				wpdata.meter_id 		= CommBase.CheckString(mapmp.get("meter_id"));//ESAM表号
				wpdata.comm_addr		= CommBase.CheckString(mapmp.get("comm_addr"));//电表地址
				wpdata.beilv			= CommBase.CheckString(mapmp.get("beilv")); 	//倍率
			}
		
			YffRatePara yffrate 	= (YffRatePara)Rd.getRecord(YDTable.TABLECLASS_YFFRATEPARA, Short.parseShort(CommBase.CheckNum(mapp.get("feeproj_id"))));
			wpdata.fee_type_desc	= Rd.getDict(Dict.DICTITEM_FEELVTYPE, yffrate.getFeeType()); //电价类型(char16)
			wpdata.yffrate_desc  	= getDJLX(yffrate); //电价方案(char64)
		
			YffAlarmPara yffalarm 	= (YffAlarmPara)Rd.getRecord(YDTable.TABLECLASS_YFFALARMPARA, Short.parseShort(CommBase.CheckNum(mapp.get("yffalarm_id"))));
			wpdata.yffalarm_desc 	= yffalarm.getDescribe();//报警方案
			wpdata.cs_stand_desc	=  CommBase.CheckString(mapp.get("cs_stand_desc"));;//力调方案描述
			wpdata.cacl_type_desc 	= Rd.getDict(Dict.DICTITEM_FEETYPE, mapp.get("cacl_type")); //计费方式0:无 1:金额计费 2:表底计费
			wpdata.feectrl_type_desc= Rd.getDict(Dict.DICTITEM_PREPAYTYPE, mapp.get("feectrl_type")); //费控方式0:本地费控 1:主站费控
			wpdata.pay_type_desc	= Rd.getDict(Dict.DICTITEM_PAYTYPE, mapp.get("pay_type"));//缴费方式0:卡式 1:远程 2:主站
		
			
			wpdata.reprint_desc		= 	(reprint == 1 ? "补打" : "" );//补打标志
			wpdata.paytime			=	CommFunc.FormatToYMD(op_date)+ CommFunc.FormatToHMS(op_time,2);		//缴费日期               			
			wpdata.wasteno          =  	wasteno;	//流水号              
			wpdata.rewasteno        =  	CommBase.CheckString(mapd.get("rewasteno"));	//被冲正流水号        
			wpdata.op_type_desc     =  	Rd.getDict(Dict.DICTITEM_YFFOPTYPE, op_type);	//操作类型            
			wpdata.buy_times        =  	CommBase.strtoi(mapd.get("buy_times").toString());	//购电次数            
		
//			if(clp_num==1){
//				wpdata.bef_ygbd		= CommBase.CheckString(mapd.get("calc_zyz"));//缴费前有功表底
//			}else if(clp_num==2){
//				wpdata.bef_ygbd		= "一:" + CommBase.CheckString(mapd.get("calc_zyz")) + ",二:" + CommBase.CheckString(mapd.get("calc1_zyz"));
//			}else if(clp_num==3){
//				wpdata.bef_ygbd		= "一:" + CommBase.CheckString(mapd.get("calc_zyz")) + ",二:" + CommBase.CheckString(mapd.get("calc1_zyz")) + ",三:" + CommBase.CheckString(mapd.get("calc2_zyz"));
//			}
//			
//			Double shutdown_val = Double.parseDouble(CommBase.CheckNum(mapd.get("shutdown_val")));//断电止码
			Double pay_bmc 		= Double.parseDouble(CommBase.CheckNum(mapd.get("pay_bmc")));//表码差
//			Double aft_money 	= (shutdown_val- Double.parseDouble(CommBase.CheckNum(mapd.get("calc_zyz")))) * Double.parseDouble(wpdata.beilv) * yffrate.getRatedZ();//缴费后剩余金额(元)=（shutdown_val-calc）* ptct*电价
			Double all_money 	= Double.parseDouble(CommBase.CheckNum(mapd.get("all_money")));//缴费总金额(元)

//			wpdata.bef_remain       = aft_money - all_money  ;//缴费前剩余金额 =缴费后剩余金额-本次缴费总金额
//			wpdata.bef_shutdown_val = shutdown_val - pay_bmc;//缴费前断电止码 =断电止码-表码差
			wpdata.pay_money        = Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money")));//缴费金额(元)
			wpdata.pay_money_desc   = MoneyNum2Char.convertChar(Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money"))));//缴费金额大写字符串
			wpdata.othjs_money      = Double.parseDouble(CommBase.CheckNum(mapd.get("othjs_money"))); //结算金额(元)
			wpdata.zb_money         = Double.parseDouble(CommBase.CheckNum(mapd.get("zb_money")));    //追补金额(元)
			wpdata.all_money        = all_money;//缴费总金额(元)
			wpdata.all_money_desc   = MoneyNum2Char.convertChar(all_money);//缴费总金额大写字符串
			wpdata.alarm_code		= Double.parseDouble(CommBase.CheckNum(mapd.get("alarm1")));//报警表底
			wpdata.buy_dl			= Double.parseDouble(CommBase.CheckNum(mapd.get("buy_dl")));//购电量	
			wpdata.pay_bmc			= pay_bmc;//表码差	
//			wpdata.shutdown_val		= shutdown_val;//断电止码	
//			wpdata.aft_money        = aft_money;//缴费后剩余金额(元)
			wpdata.total_pay_money  = Double.parseDouble(CommBase.CheckNum(mapd.get("total_gdz")));//累计缴费金额(元)
		
		}catch(Exception e){
			errMsg = "ERR:从数据库查询用户信息失败";
			return false;
		}finally {	
			j_dao.closeRs(rs);
		}
		printDataStr.append(toPrintDataStr(wpdata));
		
		return true;
	}


	/**高压远程金额--取得打印内容（补打发票页面）
	 * 查询预付费状态、数据库的用户信息。
	 * 返回一个字符串，各个参数间|分隔。
	 * @param yffDataOperIdx
	 * @param printDataStr
	 * @return
	 */
	private boolean getReprintDataGyRemoteJE(String yffDataOperIdx, StringBuffer printDataStr){
		WebPrintData wpdata = new WebPrintData();
		
		JSONObject json  = JSONObject.fromObject(yffDataOperIdx);
		
		Integer rtu_id   = json.getInt("rtu_id");
		Short  	sub_id   = (short)json.getInt("sub_id");
		String 	wasteno  = json.getString("wasteno");	//流水号
		String  op_type  = json.getString("op_type");	//操作类型
		String  op_date  = json.getString("op_date");	//操作日期
		String  op_time  = json.getString("op_time");	//购电时间
		
		while(op_time.length() < 6) op_time = "0" + op_time;
		
		byte  reprint   = (byte)CommBase.strtof(json.getString("reprint"));	//补打标志
		
		JDBCDao 	j_dao = new JDBCDao();
		ResultSet 	rs 	  = null;
		
		String sql ="select o.describe as org_desc,ln.describe as line_desc,o.addr as org_addr, o.telno as org_telno,c.busi_no as cons_no," +
					"c.describe as cons_desc,c.trade1,zs.cus_state,c.cont_cap,c.tel_no1,c.tel_no2,z.clp_num,z.clp_ids,zs.*," +
					"zp.feeproj_id,zp.yffalarm_id,zp.cacl_type,zp.feectrl_type,zp.pay_type,cs.describe as cs_stand_desc " +
					"from conspara c,orgpara o,substation s ,rtupara r, zjgpay_para zp,zjgpay_state zs, zjgpara z,linepara ln,cs_stand cs " +  
					"where c.org_id = o.id and c.subst_id=ln.subs_id and c.line_id = ln.id and c.subst_id=s.id and c.id=r.cons_id and zp.cs_stand=cs.id " +
					"and zp.rtu_id = r.id and z.rtu_id = r.id and z.zjg_id = z.zjg_id and zs.rtu_id = r.id and zs.zjg_id = zp.zjg_id " + 
					"and z.rtu_id = " + rtu_id + " and z.zjg_id=" + sub_id;
		String sqlyddataben = "select * from yddataben.dbo.zyff" + op_date.substring(0,4) + " where wasteno='" + wasteno + "'";
		
		try {
			List<Map<String,Object>> listp = j_dao.result(sql);
			List<Map<String,Object>> listd = j_dao.result(sqlyddataben);
			
			if(listp == null || listp.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的用户档案.";
				return false;
			}else if(listd == null || listd.size() == 0){
				errMsg = "ERR:数据库中没有找到对应的缴费记录.";
				return false;
			}
			
			//获取一条数据存入map
			Map<String,Object> mapp = listp.get(0);
			Map<String,Object> mapd = listd.get(0);
			
			//给wpdata赋值
			wpdata.org_desc			= CommBase.CheckString(mapp.get("org_desc")); 	//供电所
			wpdata.line_desc		= CommBase.CheckString(mapp.get("line_desc")); 	//变电站线路
			wpdata.org_addr			= CommBase.CheckString(mapp.get("org_addr")); 	//购电地址
			wpdata.org_telno		= CommBase.CheckString(mapp.get("org_telno"));	//服务电话
			wpdata.yffman_desc		= CommBase.CheckString(mapd.get("op_man"));		//售电操作员
			wpdata.busi_no			= CommBase.CheckString(mapp.get("cons_no"));	//客户编号
			wpdata.cons_desc		= CommBase.CheckString(mapp.get("cons_desc"));	//客户名称
			wpdata.trade1_desc		= Rd.getDict(Dict.DICTITEM_TRADE,CommBase.CheckNum(mapp.get("trade1")));//客户分类
			wpdata.cus_state_desc 	= Rd.getDict(Dict.DICTITEM_YFFCUSSTATE, mapp.get("cus_state"));//客户状态
			wpdata.cont_cap			= CommBase.CheckString(mapp.get("cont_cap"));//变压器容量
			wpdata.tel_no1			= CommBase.CheckString(mapp.get("tel_no1"));//客户固定电话
			wpdata.tel_no2			= CommBase.CheckString(mapp.get("tel_no2"));//客户移动电话
			
			String str_clp_num  = CommBase.CheckNum(mapp.get("clp_num"));
			int    clp_num 		= CommBase.strtoi(str_clp_num);
			String clp_ids 		= CommBase.CheckString(mapp.get("clp_ids"));
			int mp_id = findFirstMpId(clp_ids);
			
			String sqlmp = "select  mp.pt_ratio*mp.ct_ratio as beilv,mt.meter_id,mt.comm_addr from mppara mp,meterpara mt where mp.rtu_id=" + rtu_id + " and mp.id=" + mp_id + " and mp.rtu_id=mt.rtu_id and mp.id=mt.mp_id";
			List<Map<String,Object>> listmp = j_dao.result(sqlmp);
			
			if(listmp != null && listmp.size()> 0){
				Map<String,Object> mapmp = listmp.get(0);				
				wpdata.meter_id 		= CommBase.CheckString(mapmp.get("meter_id"));//ESAM表号
				wpdata.comm_addr		= CommBase.CheckString(mapmp.get("comm_addr"));//电表地址
				wpdata.beilv			= CommBase.CheckString(mapmp.get("beilv")); 	//倍率
			}
		
			YffRatePara yffrate 	= (YffRatePara)Rd.getRecord(YDTable.TABLECLASS_YFFRATEPARA, Short.parseShort(CommBase.CheckNum(mapp.get("feeproj_id"))));
			wpdata.fee_type_desc	= Rd.getDict(Dict.DICTITEM_FEELVTYPE, yffrate.getFeeType()); //电价类型(char16)
			wpdata.yffrate_desc  	= getDJLX(yffrate); //电价方案(char64)
		
			YffAlarmPara yffalarm 	= (YffAlarmPara)Rd.getRecord(YDTable.TABLECLASS_YFFALARMPARA, Short.parseShort(CommBase.CheckNum(mapp.get("yffalarm_id"))));
			wpdata.yffalarm_desc 	= yffalarm.getDescribe();//报警方案
			wpdata.cs_stand_desc	=  CommBase.CheckString(mapp.get("cs_stand_desc"));;//力调方案描述
			wpdata.cacl_type_desc 	= Rd.getDict(Dict.DICTITEM_FEETYPE, mapp.get("cacl_type")); //计费方式0:无 1:金额计费 2:表底计费
			wpdata.feectrl_type_desc= Rd.getDict(Dict.DICTITEM_PREPAYTYPE, mapp.get("feectrl_type")); //费控方式0:本地费控 1:主站费控
			wpdata.pay_type_desc	= Rd.getDict(Dict.DICTITEM_PAYTYPE, mapp.get("pay_type"));//缴费方式0:卡式 1:远程 2:主站
		
			
			wpdata.reprint_desc		= 	(reprint == 1 ? "补打" : "" );//补打标志
			wpdata.paytime			=	CommFunc.FormatToYMD(op_date)+ CommFunc.FormatToHMS(op_time,2);		//缴费日期               			
			wpdata.wasteno          =  	wasteno;	//流水号              
			wpdata.rewasteno        =  	CommBase.CheckString(mapd.get("rewasteno"));	//被冲正流水号        
			wpdata.op_type_desc     =  	Rd.getDict(Dict.DICTITEM_YFFOPTYPE, op_type);	//操作类型            
			wpdata.buy_times        =  	CommBase.strtoi(mapd.get("buy_times").toString());	//购电次数            
		
			if(clp_num==1){
				wpdata.bef_ygbd		= CommBase.CheckString(mapd.get("calc_zyz"));//缴费前有功表底
			}else if(clp_num==2){
				wpdata.bef_ygbd		= "一:" + CommBase.CheckString(mapd.get("calc_zyz")) + ",二:" + CommBase.CheckString(mapd.get("calc1_zyz"));
			}else if(clp_num==3){
				wpdata.bef_ygbd		= "一:" + CommBase.CheckString(mapd.get("calc_zyz")) + ",二:" + CommBase.CheckString(mapd.get("calc1_zyz")) + ",三:" + CommBase.CheckString(mapd.get("calc2_zyz"));
			}
			
			Double aft_money = Double.parseDouble(CommBase.CheckNum(mapd.get("buy_dl")));//buy_dl（存储为缴费时总金额）
			Double all_money = Double.parseDouble(CommBase.CheckNum(mapd.get("all_money")));			
			wpdata.bef_remain       = aft_money - all_money;//缴费前剩余金额 =缴费后剩余金额-本次缴费总金额     
			wpdata.pay_money        = Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money")));//缴费金额(元)
			wpdata.pay_money_desc   = MoneyNum2Char.convertChar(Double.parseDouble(CommBase.CheckNum(mapd.get("pay_money"))));//缴费金额大写字符串
			wpdata.othjs_money      = Double.parseDouble(CommBase.CheckNum(mapd.get("othjs_money"))); //结算金额(元)
			wpdata.zb_money         = Double.parseDouble(CommBase.CheckNum(mapd.get("zb_money")));    //追补金额(元)
			wpdata.all_money        = all_money;//缴费总金额(元)
			wpdata.all_money_desc   = MoneyNum2Char.convertChar(all_money);//缴费总金额大写字符串
			wpdata.alarm_money1     = Double.parseDouble(CommBase.CheckNum(mapd.get("alarm1")));//报警金额1(元)
			wpdata.alarm_money2     = Double.parseDouble(CommBase.CheckNum(mapd.get("alarm2")));//报警金额2(元)
			wpdata.aft_money        = aft_money;//缴费后剩余金额(元)
			wpdata.total_pay_money  = Double.parseDouble(CommBase.CheckNum(mapd.get("total_gdz")));//累计缴费金额(元)
			
		}catch(Exception e){
			errMsg = "ERR:从数据库查询用户信息失败";
			return false;
		}finally {	
			j_dao.closeRs(rs);
		}
		printDataStr.append(toPrintDataStr(wpdata));
		
		return true;
	}

	
	private int findFirstMpId(String clp_ids) {
		if(clp_ids == null || clp_ids.isEmpty()) return -1;
		for(int i = 0; i < clp_ids.length(); i++) {
			if(clp_ids.charAt(i) == '1') return i;
		}
		
		return -1;
	}
	
	private String toPrintDataStr(WebPrintData wpdata){
		StringBuffer sbf = new StringBuffer();
		
		//注意，下面的顺序不允许更改
		//公共档案
		sbf.append(wpdata.org_desc              + sept);    //供电所
		sbf.append(wpdata.line_desc             + sept);    //变电站线路
		sbf.append(wpdata.org_addr              + sept);    //购电地址
		sbf.append(wpdata.org_telno             + sept);    //服务电话
		sbf.append(wpdata.yffman_desc           + sept);    //售电操作员
		sbf.append(wpdata.busi_no               + sept);    //客户编号
		sbf.append(wpdata.cons_desc             + sept);    //客户名称
		sbf.append(wpdata.trade1_desc           + sept);    //客户分类
		sbf.append(wpdata.cus_state_desc        + sept);    //客户状态
		sbf.append(wpdata.cont_cap              + sept);    //变压器容量(kVA)
		sbf.append(wpdata.rtu_desc 				+ sept);	//终端描述
		sbf.append(wpdata.tel_no1               + sept);    //客户固定电话
		sbf.append(wpdata.tel_no2               + sept);    //客户移动电话
		sbf.append(wpdata.meter_id              + sept);    //ESAM表号
		sbf.append(wpdata.comm_addr             + sept);    //电表地址
		sbf.append(wpdata.writecard_no 			+ sept);    //写卡户号
		sbf.append(wpdata.beilv 				+ sept);	//倍率
		sbf.append(wpdata.fee_type_desc         + sept);    //电价类型
		sbf.append(wpdata.yffrate_desc          + sept);    //电价方案
		sbf.append(wpdata.yffalarm_desc         + sept);    //报警方案
		sbf.append(wpdata.cs_stand_desc         + sept);    //力调方案
		sbf.append(wpdata.cacl_type_desc        + sept);    //计费方式
		sbf.append(wpdata.feectrl_type_desc     + sept);    //费控方式
		sbf.append(wpdata.pay_type_desc         + sept);    //缴费方式
		sbf.append(wpdata.jt_cycle_md           + sept);    //阶梯周期切换日期
		sbf.append(wpdata.area_desc 			+ sept);	//所属片区
		sbf.append(wpdata.np_cardno 			+ sept);	//农排卡号
		sbf.append(wpdata.reprint_desc          + sept);    //补打标志
	  
		sbf.append(wpdata.para_back1 			+ sept);    //备用参数28
		sbf.append(wpdata.para_back2 			+ sept);    //备用参数29
		sbf.append(wpdata.para_back3 			+ sept);    //备用参数30
		
		//缴费参数  
		sbf.append(wpdata.paytime 				+ sept);    //缴费日期
		sbf.append(wpdata.wasteno 				+ sept);    //流水号
		sbf.append(wpdata.rewasteno 			+ sept);    //被冲正流水号
		sbf.append(wpdata.op_type_desc 			+ sept);    //操作类型
		sbf.append(wpdata.	buy_times 			+ sept);    //购电次数
		sbf.append(wpdata.bef_jsygbd 			+ sept);    //结算有功表底
		sbf.append(wpdata.bef_jswgbd 			+ sept);    //结算无功表底
		sbf.append(wpdata.bef_ygbd 				+ sept);    //缴费前有功表底
		sbf.append(wpdata.bef_wgbd 				+ sept);    //缴费前无功表底
		sbf.append(wpdata.bef_remain 			+ sept);    //缴费前剩余金额
		sbf.append(wpdata.bef_shutdown_val 	    + sept);    //缴费前断电止码
		sbf.append(wpdata.pay_money 			+ sept);    //缴费金额(元)
		sbf.append(wpdata.pay_money_desc 		+ sept);    //缴费金额大写字符串
		sbf.append(wpdata.othjs_money 			+ sept);    //结算金额(元)
		sbf.append(wpdata.zb_money 				+ sept);    //追补金额(元)
		sbf.append(wpdata.all_money 			+ sept);    //缴费总金额(元)
		sbf.append(wpdata.all_money_desc 		+ sept);    //缴费总金额大写字符串
		sbf.append(wpdata.alarm_code 			+ sept);    //报警表底
		sbf.append(wpdata.buy_dl 				+ sept);    //购电量
		sbf.append(wpdata.pay_bmc 				+ sept);    //表码差
		sbf.append(wpdata.shutdown_val 			+ sept);    //断电止码
		sbf.append(wpdata.alarm_money1 			+ sept);    //报警金额1(元)
		sbf.append(wpdata.alarm_money2 			+ sept);    //报警金额2(元)
		sbf.append(wpdata.aft_money 			+ sept);    //缴费后剩余金额(元)
		sbf.append(wpdata.aft_money2 			+ sept);    //缴费后剩余金额2(元)
		sbf.append(wpdata.total_pay_money 		+ sept);    //累计缴费金额(元)
		sbf.append(wpdata.jt_use_dl1 			+ sept);    //阶梯一档用电量
		sbf.append(wpdata.jt_use_dl2 			+ sept);    //阶梯二档用电量
		sbf.append(wpdata.jt_use_dl3 			+ sept);    //阶梯三档用电量
		sbf.append(wpdata.jt_use_dl4 			+ sept);    //阶梯四档用电量
		sbf.append(wpdata.pay_back1 			+ sept);    //缴费备用61
		sbf.append(wpdata.pay_back2 			+ sept);    //缴费备用62
		sbf.append(wpdata.pay_back3 			+ sept);    //缴费备用63
		sbf.append(wpdata.pay_back4 			+ sept);    //缴费备用64
		sbf.append(wpdata.pay_back5 			+ sept);    //缴费备用65
		sbf.append(wpdata.pay_back6 			+ sept);    //缴费备用66
		sbf.append(wpdata.pay_back7 			+ sept);    //缴费备用67
		sbf.append(wpdata.pay_back8 			+ sept);    //缴费备用68
		sbf.append(wpdata.pay_back9 			+ sept);    //缴费备用69
		sbf.append(wpdata.pay_back10 			+ sept);    //缴费备用70

		//发行电费   
		sbf.append(wpdata.fx_mdhmi 				+ sept);   	//发行电费日期
		sbf.append(wpdata.fx_ele_money 			+ sept);	//发行电度电费(元)
		sbf.append(wpdata.fx_jbf_money 			+ sept);	//发行基本电费(元)
		sbf.append(wpdata.fx_powrate_money		+ sept);    //发行力调电费(元)
		sbf.append(wpdata.fx_other_money 		+ sept);	//发行其他电费(元)
		sbf.append(wpdata.fx_all_money 			+ sept);	//发行总电费(元)
		sbf.append(wpdata.fx_ygbd 				+ sept);    //发行有功表底
		sbf.append(wpdata.fx_wgbd 				+ sept);    //发行无功表底
		sbf.append(wpdata.fx_ygdl 				+ sept);    //发行有功电量
		sbf.append(wpdata.fx_wgdl 				+ sept);    //发行无功电量
		sbf.append(wpdata.fx_jtygbd 			+ sept);	//阶梯发行有功表底
		sbf.append(wpdata.fx_jtygdl 			+ sept);    //阶梯累计用电量
		sbf.append(wpdata.fx_back1 				+ sept);    //电费备用83
		sbf.append(wpdata.fx_back2 				+ sept);    //电费备用84
		sbf.append(wpdata.fx_back3 				+ sept);    //电费备用85
		sbf.append(wpdata.fx_back4 				+ sept);    //电费备用86
		sbf.append(wpdata.fx_back5 				+ sept);    //电费备用87
		sbf.append(wpdata.fx_back6 				+ sept);    //电费备用88
		sbf.append(wpdata.fx_back7 				+ sept);    //电费备用89
		sbf.append(wpdata.fx_back8 				);    //电费备用90
	    
		return sbf.toString();
	} 
	
	
	/**
	 * 根据YffRatePara取得"费率方案描述"字符串
	 * @param YffRatePara
	 * @return String
	 */
	private static String getDJLX(YffRatePara yffrate){
		
		if(yffrate == null)return "";
		
		String strDesc = null;
		
		switch(yffrate.getFeeType()){
		case SDDef.YFF_FEETYPE_DFL: 
			//"总:%.3f 
			strDesc = String.valueOf(yffrate.getRatedZ());
			break;
		case SDDef.YFF_FEETYPE_FFL: 
			//"尖:%.3f 峰:%.3f 平:%.3f 谷:%.3f "
			strDesc = "尖/峰/平/谷:" + yffrate.getRatefJ() + "/" + yffrate.getRatefF() + "/" + yffrate.getRatefP() + "/" + yffrate.getRatefG();
			break;
//		case SDDef.YFF_FEETYPE_MIX: 
//			//"混一:%.3f[%d%%] 混二:%.3f[%d%%] 混三:%.3f[%d%%] 混四:%.3f[%d%%] 囤积限值:%.3f",
//			strDesc = "混一/二/三/四:" + yffrate.getRateh1()+ "[" + yffrate.getRatehBl1() + "]/" + yffrate.getRateh2() + "[" + yffrate.getRatehBl2() + "]/" + yffrate.getRateh3() + "[" + yffrate.getRatehBl3() + "]/" + yffrate.getRateh4() + "[" + yffrate.getRatehBl4() + "]";
//			break;
		case SDDef.YFF_FEETYPE_JTFL:	//阶梯费率1:，阶梯费率2:，阶梯费率3:，梯度1:，梯度2:
			strDesc = "0~" + yffrate.getRatejTd1()+ "~" + yffrate.getRatejTd2() + ":" + yffrate.getRatejR1() + "/" + yffrate.getRatejR2() + "/" + yffrate.getRatejR3();
			break;
//		case SDDef.YFF_FEETYPE_MIXJT:
//			
//			String tdz  = "0~" + yffrate.getRatehjHr1Td1() + "~";//梯度值
//			String jtdj =  yffrate.getRatehjHr1R1() + "/" + yffrate.getRatehjHr1R2();;//阶梯电价
//			if(yffrate.getRatehjHr1Td2() != null){
//				tdz  += yffrate.getRatehjHr1Td2() + "~";
//				jtdj += "/" + yffrate.getRatehjHr1R3();
//			}
//			if(yffrate.getRatehjHr1Td3() != null)	{
//				tdz  += yffrate.getRatehjHr1Td3() + "~";
//				jtdj += "/" + yffrate.getRatehjHr1R4();			
//			}
//			String jstr = "[" + tdz + ":" + jtdj + "]";
//			strDesc = "混一阶梯(" + yffrate.getRatehjBl1() + "%:" + jstr + ")/混二(" + yffrate.getRatehjBl2() + "%:" + yffrate.getRatehjHr2() + ")/混三(" + yffrate.getRatehjBl3() + "%:"+yffrate.getRatehjHr3()+")" ;
//			
//			break;
		}
		
		if(strDesc == null){
			strDesc=I18N.getText("invalid")+I18N.getText("flfa");	
		}
		
		return strDesc;
	}
	
	public String getResult() {
		return result;
	}

	public void setResult(String result) {
		this.result = result;
	}

	
	public String getField() {
		return field;
	}

	public void setField(String field) {
		this.field = field;
	}

	
	public String getBytesize() {
		return bytesize;
	}

	public void setBytesize(String bytesize) {
		this.bytesize = bytesize;
	}

	public String getErrMsg() {
		return errMsg;
	}
	public void setErrMsg(String errMsg) {
		this.errMsg = errMsg;
	}

}
